{"version":3,"sources":["wangEditor.js"],"names":["global","factory","exports","module","define","amd","wangEditor","this","createElemByHTML","html","div","document","createElement","innerHTML","children","isDOMList","selector","HTMLCollection","NodeList","querySelectorAll","result","DomElement","nodeType","selectorResult","Array","replace","trim","indexOf","length","i","$","objForEach","obj","fn","key","hasOwnProperty","call","arrForEach","fakeArr","item","getRandom","prefix","Math","random","toString","slice","replaceHtmlSymbol","isFunction","Bold","editor","$elem","type","_active","DropList","menu","opt","_this","$container","$title","titleHtml","replaceLang","addClass","append","list","onClick","_emptyFn","$list","forEach","elemHtml","value","$li","on","e","hideTimeoutId","setTimeout","hide","_rendered","_show","Head","droplist","width","_command","FontSize","FontName","config","fontNames","map","fontName","Panel","Link","Italic","Redo","StrikeThrough","Underline","Undo","List","Justify","ForeColor","colors","color","BackColor","Quote","Code","Emoticon","Table","Video","Image","imgMenuId","Tool","FullScreen","Menus","menus","getPasteText","clipboardData","originalEvent","pasteText","window","getData","getPasteHtml","filterStyle","ignoreImg","pasteHtml","docSplitHtml","split","getPasteImgs","items","test","push","getAsFile","getChildrenJSON","childNodes","curElem","elemResult","textContent","tag","nodeName","toLowerCase","attrData","attrList","attributes","attrListLength","attr","name","attrs","Text","Command","API","_currentRange","Progress","_time","_isShow","_isRender","_timeoutId","$textContainer","$textContainerElem","$bar","UploadImg","Editor","toolbarSelector","textSelector","Error","id","editorId","customConfig","eventList","prototype","constructor","elem","clone","deep","cloneList","cloneNode","get","index","first","last","types","addEventListener","target","matches","off","removeEventListener","val","getAttribute","setAttribute","className","arr","filter","join","removeClass","css","currentStyle","style","styleArr","resultArr","show","$children","child","appendChild","remove","parent","parentElement","removeChild","isContain","$child","contains","getSizeData","getBoundingClientRect","getNodeName","find","text","focus","parentUntil","_currentElem","results","equal","insertBefore","$referenceNode","referenceNode","parentNode","insertAfter","lastChild","nextSibling","offAll","emotions","title","content","alt","src","zIndex","debug","linkCheck","link","linkImgCheck","pasteFilterStyle","pasteIgnoreImg","pasteTextHandle","showLinkImg","linkImgCallback","url","uploadImgMaxSize","uploadImgShowBase64","uploadFileName","uploadImgParams","uploadImgHeaders","withCredentials","uploadImgTimeout","uploadImgHooks","before","xhr","files","success","fail","error","timeout","qiniu","UA","_ua","navigator","userAgent","isWebkit","isIE","isSeleEmpty","selection","isSelectionEmpty","createEmptyRange","cmd","do","collapseRange","restoreSelection","tryChangeActive","queryCommandState","str","langArgs","reg","clearTimeout","$menuELem","menuHeight","height","showTimeoutId","$selectionElem","getSelectionContainerElem","$textElem","cmdValue","queryCommandValue","emptyFn","_isCreatedPanelMenus","$body","$closeBtn","$tabTitleContainer","$tabContentContainer","tabs","tabTitleArr","tabContentArr","tab","tabIndex","tpl","$content","_index","stopPropagation","events","event","$inputs","_hideOtherPanels","panel","$linkelem","createRangeByElem","_createPanel","getSelectionText","inputLinkId","inputTextId","btnOkId","btnDelId","inputLinkIdCopy","inputTextIdCopy","btnOkIdCopy","btnDelIdCopy","inputLinkIdApp","inputTextIdApp","btnOkIdApp","inputLinkIdOpen","inputTextIdOpen","btnOkIdOpen","delBtnDisplay","$link","$text","_insertLink","_delLink","_insertLinkCopy","_delLinkCopy","_insertLinkOpen","_insertLinkApp","selectionText","checkResult","alert","customCopyId","iconTypeClass","match","RegExp","$selectionELem","$parent","$targetELem","$startElem","getSelectionStartElem","$endElem","getSelectionEndElem","$code","textId","btnId","_insertCode","_updateCode","$parentElem","tabConfig","emotData","emotType","faceHtml","$target","insertHtml","_insert","emotHtml","_createEditPanel","_createInsertPanel","btnInsertId","textRowNum","textColNum","rowNum","parseInt","colNum","r","c","_this2","addRowBtnId","addColBtnId","delRowBtnId","delColBtnId","delTableBtnId","_addRow","_addCol","_delRow","_delCol","_delTable","_getLocationData","$tr","$tds","tdLength","td","$tbody","$trs","trLength","tr","locationData","trData","$currentTr","tdData","newTr","tdIndex","$currentTd","$table","textValId","width30","width50","width100","delBtn","tabsConfig","$img","_selectedImg","uploadImg","upTriggerId","upFileId","linkUrlId","linkBtnId","$file","fileElem","click","fileList","$linkUrl","insertLinkImg","tabsConfigResult","uploadImgServer","customUploadImg","FileReader","iconImg","wangEditorToogleFullScreen","wangEditorIsFullScreen","console","log","MenuConstructors","bold","head","fontSize","italic","redo","strikeThrough","underline","undo","justify","foreColor","backColor","quote","code","emoticon","table","video","image","tool","fullscreen","init","menuKey","MenuConstructor","_addToToolbar","_bindEvent","$toolbarElem","getRange","changeActive","clear","initSelection","getJSON","_saveRangeRealTime","_enterKeyHandle","_clearHandle","_pasteHandle","_tabHandle","_imgHandle","_dragHandle","saveRange","insertEmptyP","$p","pHandle","codeHandle","selectionNodeName","parentNodeName","queryCommandSupported","_willBreakCode","preventDefault","_startOffset","startOffset","codeLength","keyCode","txtHtml","canDo","now","Date","flag","pasteTime","resetTime","ex","pasteFiles","img","dataTransfer","_useStyleWithCSS","execCommand","_name","_execCommand","change","_insertHTML","range","insertNode","deleteContents","pasteHTML","_insertElem","_range","getSelection","rangeCount","getRangeAt","$containerElem","toStart","collapse","commonAncestorContainer","startContainer","endContainer","endOffset","removeAllRanges","addRange","setEnd","isContent","createRange","selectNodeContents","selectNode","progress","timeoutId","_hide","_typeof","Symbol","iterator","_alert","alertInfo","debugInfo","customAlert","onload","callback","onerror","onabort","_this3","maxSize","maxSizeM","maxLength","uploadImgMaxLength","uploadImgParamsWithUrl","hooks","resultFiles","errInfo","file","size","bind","formdata","FormData","uploadImgServerArr","uploadImgServerHash","XMLHttpRequest","open","ontimeout","upload","onprogress","percent","progressBar","lengthComputable","loaded","total","onreadystatechange","readyState","status","responseText","JSON","parse","customInsert","errno","data","beforeResult","prevent","msg","setRequestHeader","send","reader","readAsDataURL","_initConfig","Object","assign","langConfig","lang","_initDom","$toolbarSelector","config$$1","toolbarElemId","textElemId","compositionEnd","onfocus","onblur","isFocus","isChild","isToolbar","isMenu","_initCommand","_initSelectionAPI","_initUploadImg","_initMenus","_initText","txt","newLine","$last","onChangeTimeoutId","beforeChangeHtml","onchangeTimeout","onchange","currentHtml","create","_offAllEvent","varArgs","TypeError","to","arguments","nextSource","nextKey","Element","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","s","ownerDocument","getElementsByTagName"],"mappings":"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","file":"wangEditor.min.js","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.wangEditor = factory());\n}(this, (function () { 'use strict';\n\n/*\n    poly-fill\n*/\n\nvar polyfill = function () {\n\n    // Object.assign\n    if (typeof Object.assign != 'function') {\n        Object.assign = function (target, varArgs) {\n            // .length of function is 2\n            if (target == null) {\n                // TypeError if undefined or null\n                throw new TypeError('Cannot convert undefined or null to object');\n            }\n\n            var to = Object(target);\n\n            for (var index = 1; index < arguments.length; index++) {\n                var nextSource = arguments[index];\n\n                if (nextSource != null) {\n                    // Skip over if undefined or null\n                    for (var nextKey in nextSource) {\n                        // Avoid bugs when hasOwnProperty is shadowed\n                        if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                            to[nextKey] = nextSource[nextKey];\n                        }\n                    }\n                }\n            }\n            return to;\n        };\n    }\n\n    // IE 中兼容 Element.prototype.matches\n    if (!Element.prototype.matches) {\n        Element.prototype.matches = Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector || function (s) {\n            var matches = (this.document || this.ownerDocument).querySelectorAll(s),\n                i = matches.length;\n            while (--i >= 0 && matches.item(i) !== this) {}\n            return i > -1;\n        };\n    }\n};\n\n/*\n    DOM 操作 API\n*/\n\n// 根据 html 代码片段创建 dom 对象\nfunction createElemByHTML(html) {\n    var div = void 0;\n    div = document.createElement('div');\n    div.innerHTML = html;\n    return div.children;\n}\n\n// 是否是 DOM List\nfunction isDOMList(selector) {\n    if (!selector) {\n        return false;\n    }\n    if (selector instanceof HTMLCollection || selector instanceof NodeList) {\n        return true;\n    }\n    return false;\n}\n\n// 封装 document.querySelectorAll\nfunction querySelectorAll(selector) {\n    var result = document.querySelectorAll(selector);\n    if (isDOMList(result)) {\n        return result;\n    } else {\n        return [result];\n    }\n}\n\n// 记录所有的事件绑定\nvar eventList = [];\n\n// 创建构造函数\nfunction DomElement(selector) {\n    if (!selector) {\n        return;\n    }\n\n    // selector 本来就是 DomElement 对象，直接返回\n    if (selector instanceof DomElement) {\n        return selector;\n    }\n\n    this.selector = selector;\n    var nodeType = selector.nodeType;\n\n    // 根据 selector 得出的结果（如 DOM，DOM List）\n    var selectorResult = [];\n    if (nodeType === 9) {\n        // document 节点\n        selectorResult = [selector];\n    } else if (nodeType === 1) {\n        // 单个 DOM 节点\n        selectorResult = [selector];\n    } else if (isDOMList(selector) || selector instanceof Array) {\n        // DOM List 或者数组\n        selectorResult = selector;\n    } else if (typeof selector === 'string') {\n        // 字符串\n        selector = selector.replace('/\\n/mg', '').trim();\n        if (selector.indexOf('<') === 0) {\n            // 如 <div>\n            selectorResult = createElemByHTML(selector);\n        } else {\n            // 如 #id .class\n            selectorResult = querySelectorAll(selector);\n        }\n    }\n\n    var length = selectorResult.length;\n    if (!length) {\n        // 空数组\n        return this;\n    }\n\n    // 加入 DOM 节点\n    var i = void 0;\n    for (i = 0; i < length; i++) {\n        this[i] = selectorResult[i];\n    }\n    this.length = length;\n}\n\n// 修改原型\nDomElement.prototype = {\n    constructor: DomElement,\n\n    // 类数组，forEach\n    forEach: function forEach(fn) {\n        var i = void 0;\n        for (i = 0; i < this.length; i++) {\n            var elem = this[i];\n            var result = fn.call(elem, elem, i);\n            if (result === false) {\n                break;\n            }\n        }\n        return this;\n    },\n\n    // clone\n    clone: function clone(deep) {\n        var cloneList = [];\n        this.forEach(function (elem) {\n            cloneList.push(elem.cloneNode(!!deep));\n        });\n        return $(cloneList);\n    },\n\n    // 获取第几个元素\n    get: function get(index) {\n        var length = this.length;\n        if (index >= length) {\n            index = index % length;\n        }\n        return $(this[index]);\n    },\n\n    // 第一个\n    first: function first() {\n        return this.get(0);\n    },\n\n    // 最后一个\n    last: function last() {\n        var length = this.length;\n        return this.get(length - 1);\n    },\n\n    // 绑定事件\n    on: function on(type, selector, fn) {\n        // selector 不为空，证明绑定事件要加代理\n        if (!fn) {\n            fn = selector;\n            selector = null;\n        }\n\n        // type 是否有多个\n        var types = [];\n        types = type.split(/\\s+/);\n\n        return this.forEach(function (elem) {\n            types.forEach(function (type) {\n                if (!type) {\n                    return;\n                }\n\n                // 记录下，方便后面解绑\n                eventList.push({\n                    elem: elem,\n                    type: type,\n                    fn: fn\n                });\n\n                if (!selector) {\n                    // 无代理\n                    elem.addEventListener(type, fn);\n                    return;\n                }\n\n                // 有代理\n                elem.addEventListener(type, function (e) {\n                    var target = e.target;\n                    if (target.matches(selector)) {\n                        fn.call(target, e);\n                    }\n                });\n            });\n        });\n    },\n\n    // 取消事件绑定\n    off: function off(type, fn) {\n        return this.forEach(function (elem) {\n            elem.removeEventListener(type, fn);\n        });\n    },\n\n    // 获取/设置 属性\n    attr: function attr(key, val) {\n        if (val == null) {\n            // 获取值\n            return this[0].getAttribute(key);\n        } else {\n            // 设置值\n            return this.forEach(function (elem) {\n                elem.setAttribute(key, val);\n            });\n        }\n    },\n\n    // 添加 class\n    addClass: function addClass(className) {\n        if (!className) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var arr = void 0;\n            if (elem.className) {\n                // 解析当前 className 转换为数组\n                arr = elem.className.split(/\\s/);\n                arr = arr.filter(function (item) {\n                    return !!item.trim();\n                });\n                // 添加 class\n                if (arr.indexOf(className) < 0) {\n                    arr.push(className);\n                }\n                // 修改 elem.class\n                elem.className = arr.join(' ');\n            } else {\n                elem.className = className;\n            }\n        });\n    },\n\n    // 删除 class\n    removeClass: function removeClass(className) {\n        if (!className) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var arr = void 0;\n            if (elem.className) {\n                // 解析当前 className 转换为数组\n                arr = elem.className.split(/\\s/);\n                arr = arr.filter(function (item) {\n                    item = item.trim();\n                    // 删除 class\n                    if (!item || item === className) {\n                        return false;\n                    }\n                    return true;\n                });\n                // 修改 elem.class\n                elem.className = arr.join(' ');\n            }\n        });\n    },\n\n    // 修改 css\n    css: function css(key, val) {\n        var currentStyle = key + ':' + val + ';';\n        return this.forEach(function (elem) {\n            var style = (elem.getAttribute('style') || '').trim();\n            var styleArr = void 0,\n                resultArr = [];\n            if (style) {\n                // 将 style 按照 ; 拆分为数组\n                styleArr = style.split(';');\n                styleArr.forEach(function (item) {\n                    // 对每项样式，按照 : 拆分为 key 和 value\n                    var arr = item.split(':').map(function (i) {\n                        return i.trim();\n                    });\n                    if (arr.length === 2) {\n                        resultArr.push(arr[0] + ':' + arr[1]);\n                    }\n                });\n                // 替换或者新增\n                resultArr = resultArr.map(function (item) {\n                    if (item.indexOf(key) === 0) {\n                        return currentStyle;\n                    } else {\n                        return item;\n                    }\n                });\n                if (resultArr.indexOf(currentStyle) < 0) {\n                    resultArr.push(currentStyle);\n                }\n                // 结果\n                elem.setAttribute('style', resultArr.join('; '));\n            } else {\n                // style 无值\n                elem.setAttribute('style', currentStyle);\n            }\n        });\n    },\n\n    // 显示\n    show: function show() {\n        return this.css('display', 'block');\n    },\n\n    // 隐藏\n    hide: function hide() {\n        return this.css('display', 'none');\n    },\n\n    // 获取子节点\n    children: function children() {\n        var elem = this[0];\n        if (!elem) {\n            return null;\n        }\n\n        return $(elem.children);\n    },\n\n    // 获取子节点（包括文本节点）\n    childNodes: function childNodes() {\n        var elem = this[0];\n        if (!elem) {\n            return null;\n        }\n\n        return $(elem.childNodes);\n    },\n\n    // 增加子节点\n    append: function append($children) {\n        return this.forEach(function (elem) {\n            $children.forEach(function (child) {\n                elem.appendChild(child);\n            });\n        });\n    },\n\n    // 移除当前节点\n    remove: function remove() {\n        return this.forEach(function (elem) {\n            if (elem.remove) {\n                elem.remove();\n            } else {\n                var parent = elem.parentElement;\n                parent && parent.removeChild(elem);\n            }\n        });\n    },\n\n    // 是否包含某个子节点\n    isContain: function isContain($child) {\n        var elem = this[0];\n        var child = $child[0];\n        return elem.contains(child);\n    },\n\n    // 尺寸数据\n    getSizeData: function getSizeData() {\n        var elem = this[0];\n        return elem.getBoundingClientRect(); // 可得到 bottom height left right top width 的数据\n    },\n\n    // 封装 nodeName\n    getNodeName: function getNodeName() {\n        var elem = this[0];\n        return elem.nodeName;\n    },\n\n    // 从当前元素查找\n    find: function find(selector) {\n        var elem = this[0];\n        return $(elem.querySelectorAll(selector));\n    },\n\n    // 获取当前元素的 text\n    text: function text(val) {\n        if (!val) {\n            // 获取 text\n            var elem = this[0];\n            return elem.innerHTML.replace(/<.*?>/g, function () {\n                return '';\n            });\n        } else {\n            // 设置 text\n            return this.forEach(function (elem) {\n                elem.innerHTML = val;\n            });\n        }\n    },\n\n    // 获取 html\n    html: function html(value) {\n        var elem = this[0];\n        if (value == null) {\n            return elem.innerHTML;\n        } else {\n            elem.innerHTML = value;\n            return this;\n        }\n    },\n\n    // 获取 value\n    val: function val() {\n        var elem = this[0];\n        return elem.value.trim();\n    },\n\n    // focus\n    focus: function focus() {\n        return this.forEach(function (elem) {\n            elem.focus();\n        });\n    },\n\n    // parent\n    parent: function parent() {\n        var elem = this[0];\n        return $(elem.parentElement);\n    },\n\n    // parentUntil 找到符合 selector 的父节点\n    parentUntil: function parentUntil(selector, _currentElem) {\n        var results = document.querySelectorAll(selector);\n        var length = results.length;\n        if (!length) {\n            // 传入的 selector 无效\n            return null;\n        }\n\n        var elem = _currentElem || this[0];\n        if (elem.nodeName === 'BODY') {\n            return null;\n        }\n\n        var parent = elem.parentElement;\n        var i = void 0;\n        for (i = 0; i < length; i++) {\n            if (parent === results[i]) {\n                // 找到，并返回\n                return $(parent);\n            }\n        }\n\n        // 继续查找\n        return this.parentUntil(selector, parent);\n    },\n\n    // 判断两个 elem 是否相等\n    equal: function equal($elem) {\n        if ($elem.nodeType === 1) {\n            return this[0] === $elem;\n        } else {\n            return this[0] === $elem[0];\n        }\n    },\n\n    // 将该元素插入到某个元素前面\n    insertBefore: function insertBefore(selector) {\n        var $referenceNode = $(selector);\n        var referenceNode = $referenceNode[0];\n        if (!referenceNode) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var parent = referenceNode.parentNode;\n            parent.insertBefore(elem, referenceNode);\n        });\n    },\n\n    // 将该元素插入到某个元素后面\n    insertAfter: function insertAfter(selector) {\n        var $referenceNode = $(selector);\n        var referenceNode = $referenceNode[0];\n        if (!referenceNode) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var parent = referenceNode.parentNode;\n            if (parent.lastChild === referenceNode) {\n                // 最后一个元素\n                parent.appendChild(elem);\n            } else {\n                // 不是最后一个元素\n                parent.insertBefore(elem, referenceNode.nextSibling);\n            }\n        });\n    }\n\n    // new 一个对象\n};function $(selector) {\n    return new DomElement(selector);\n}\n\n// 解绑所有事件，用于销毁编辑器\n$.offAll = function () {\n    eventList.forEach(function (item) {\n        var elem = item.elem;\n        var type = item.type;\n        var fn = item.fn;\n        // 解绑\n        elem.removeEventListener(type, fn);\n    });\n};\n\n/*\n    配置信息\n*/\n\nvar config = {\n\n    // 默认菜单配置\n    menus: ['head', 'bold', 'fontSize', 'fontName', 'italic', 'underline', 'strikeThrough', 'foreColor', 'backColor', 'link', 'list', 'justify', 'quote', 'emoticon', 'image', 'table', 'video', 'code', 'undo', 'redo',\n    /*'tool',*/ //工具箱暂时隐藏掉\n    'fullscreen'],\n\n    fontNames: ['宋体', '微软雅黑', 'Arial', 'Tahoma', 'Verdana'],\n\n    colors: ['#000000', '#eeece0', '#1c487f', '#4d80bf', '#c24f4a', '#8baa4a', '#7b5ba1', '#46acc8', '#f9963b', '#ffffff'],\n\n    // // 语言配置\n    // lang: {\n    //     '设置标题': 'title',\n    //     '正文': 'p',\n    //     '链接文字': 'link text',\n    //     '链接': 'link',\n    //     '插入': 'insert',\n    //     '创建': 'init'\n    // },\n\n    // 表情\n    emotions: [{\n        // tab 的标题\n        title: '默认',\n        // type -> 'emoji' / 'image'\n        type: 'image',\n        // content -> 数组\n        content: [{\n            alt: '[坏笑]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/50/pcmoren_huaixiao_org.png'\n        }, {\n            alt: '[舔屏]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/40/pcmoren_tian_org.png'\n        }, {\n            alt: '[污]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/3c/pcmoren_wu_org.png'\n        }]\n    }, {\n        // tab 的标题\n        title: '新浪',\n        // type -> 'emoji' / 'image'\n        type: 'image',\n        // content -> 数组\n        content: [{\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/7a/shenshou_thumb.gif',\n            alt: '[草泥马]'\n        }, {\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/60/horse2_thumb.gif',\n            alt: '[神马]'\n        }, {\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/bc/fuyun_thumb.gif',\n            alt: '[浮云]'\n        }]\n    }, {\n        // tab 的标题\n        title: 'emoji',\n        // type -> 'emoji' / 'image'\n        type: 'emoji',\n        // content -> 数组\n        content: '😀 😃 😄 😁 😆 😅 😂 😊 😇 🙂 🙃 😉 😓 😪 😴 🙄 🤔 😬 🤐'.split(/\\s/)\n    }],\n\n    // 编辑区域的 z-index\n    zIndex: 10000,\n\n    // 是否开启 debug 模式（debug 模式下错误会 throw error 形式抛出）\n    debug: false,\n\n    // 插入链接时候的格式校验\n    linkCheck: function linkCheck(text, link) {\n        // text 是插入的文字\n        // link 是插入的链接\n        return true; // 返回 true 即表示成功\n        // return '校验失败' // 返回字符串即表示失败的提示信息\n    },\n\n    // 插入网络图片的校验\n    linkImgCheck: function linkImgCheck(src) {\n        // src 即图片的地址\n        return true; // 返回 true 即表示成功\n        // return '校验失败'  // 返回字符串即表示失败的提示信息\n    },\n\n    // 粘贴过滤样式，默认开启\n    pasteFilterStyle: true,\n\n    // 粘贴内容时，忽略图片。默认关闭\n    pasteIgnoreImg: false,\n\n    // 对粘贴的文字进行自定义处理，返回处理后的结果。编辑器会将处理后的结果粘贴到编辑区域中。\n    // IE 暂时不支持\n    pasteTextHandle: function pasteTextHandle(content) {\n        // content 即粘贴过来的内容（html 或 纯文本），可进行自定义处理然后返回\n        return content;\n    },\n\n    // onchange 事件\n    // onchange: function (html) {\n    //     // html 即变化之后的内容\n    //     console.log(html)\n    // },\n\n    // 是否显示添加网络图片的 tab\n    showLinkImg: true,\n\n    // 插入网络图片的回调\n    linkImgCallback: function linkImgCallback(url) {\n        // console.log(url)  // url 即插入图片的地址\n    },\n\n    // 默认上传图片 max size: 5M\n    uploadImgMaxSize: 5 * 1024 * 1024,\n\n    // 配置一次最多上传几个图片\n    // uploadImgMaxLength: 5,\n\n    // 上传图片，是否显示 base64 格式\n    uploadImgShowBase64: false,\n\n    // 上传图片，server 地址（如果有值，则 base64 格式的配置则失效）\n    // uploadImgServer: '/upload',\n\n    // 自定义配置 filename\n    uploadFileName: '',\n\n    // 上传图片的自定义参数\n    uploadImgParams: {\n        // token: 'abcdef12345'\n    },\n\n    // 上传图片的自定义header\n    uploadImgHeaders: {\n        // 'Accept': 'text/x-json'\n    },\n\n    // 配置 XHR withCredentials\n    withCredentials: false,\n\n    // 自定义上传图片超时时间 ms\n    uploadImgTimeout: 10000,\n\n    // 上传图片 hook \n    uploadImgHooks: {\n        // customInsert: function (insertLinkImg, result, editor) {\n        //     console.log('customInsert')\n        //     // 图片上传并返回结果，自定义插入图片的事件，而不是编辑器自动插入图片\n        //     const data = result.data1 || []\n        //     data.forEach(link => {\n        //         insertLinkImg(link)\n        //     })\n        // },\n        before: function before(xhr, editor, files) {\n            // 图片上传之前触发\n\n            // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传\n            // return {\n            //     prevent: true,\n            //     msg: '放弃上传'\n            // }\n        },\n        success: function success(xhr, editor, result) {\n            // 图片上传并返回结果，图片插入成功之后触发\n        },\n        fail: function fail(xhr, editor, result) {\n            // 图片上传并返回结果，但图片插入错误时触发\n        },\n        error: function error(xhr, editor) {\n            // 图片上传出错时触发\n        },\n        timeout: function timeout(xhr, editor) {\n            // 图片上传超时时触发\n        }\n    },\n\n    // 是否上传七牛云，默认为 false\n    qiniu: false\n\n    // 上传图片自定义提示方法\n    // customAlert: function (info) {\n    //     // 自定义上传提示\n    // },\n\n    // // 自定义上传图片\n    // customUploadImg: function (files, insert) {\n    //     // files 是 input 中选中的文件列表\n    //     // insert 是获取图片 url 后，插入到编辑器的方法\n    //     insert(imgUrl)\n    // }\n};\n\n/*\n    工具\n*/\n\n// 和 UA 相关的属性\nvar UA = {\n    _ua: navigator.userAgent,\n\n    // 是否 webkit\n    isWebkit: function isWebkit() {\n        var reg = /webkit/i;\n        return reg.test(this._ua);\n    },\n\n    // 是否 IE\n    isIE: function isIE() {\n        return 'ActiveXObject' in window;\n    }\n\n    // 遍历对象\n};function objForEach(obj, fn) {\n    var key = void 0,\n        result = void 0;\n    for (key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result = fn.call(obj, key, obj[key]);\n            if (result === false) {\n                break;\n            }\n        }\n    }\n}\n\n// 遍历类数组\nfunction arrForEach(fakeArr, fn) {\n    var i = void 0,\n        item = void 0,\n        result = void 0;\n    var length = fakeArr.length || 0;\n    for (i = 0; i < length; i++) {\n        item = fakeArr[i];\n        result = fn.call(fakeArr, item, i);\n        if (result === false) {\n            break;\n        }\n    }\n}\n\n// 获取随机数\nfunction getRandom(prefix) {\n    return prefix + Math.random().toString().slice(2);\n}\n\n// 替换 html 特殊字符\nfunction replaceHtmlSymbol(html) {\n    if (html == null) {\n        return '';\n    }\n    return html.replace(/</gm, '&lt;').replace(/>/gm, '&gt;').replace(/\"/gm, '&quot;').replace(/(\\r\\n|\\r|\\n)/g, '<br/>');\n}\n\n// 返回百分比的格式\n\n\n// 判断是不是 function\nfunction isFunction(fn) {\n    return typeof fn === 'function';\n}\n\n/*\n    bold-menu\n*/\n// 构造函数\nfunction Bold(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-bold\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nBold.prototype = {\n    constructor: Bold,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 bold 命令\n        editor.cmd.do('bold');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('bold')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    替换多语言\n */\n\nvar replaceLang = function (editor, str) {\n    var langArgs = editor.config.langArgs || [];\n    var result = str;\n\n    langArgs.forEach(function (item) {\n        var reg = item.reg;\n        var val = item.val;\n\n        if (reg.test(result)) {\n            result = result.replace(reg, function () {\n                return val;\n            });\n        }\n    });\n\n    return result;\n};\n\n/*\n    droplist\n*/\nvar _emptyFn = function _emptyFn() {};\n\n// 构造函数\nfunction DropList(menu, opt) {\n    var _this = this;\n\n    // droplist 所依附的菜单\n    var editor = menu.editor;\n    this.menu = menu;\n    this.opt = opt;\n    // 容器\n    var $container = $('<div class=\"w-e-droplist\"></div>');\n\n    // 标题\n    var $title = opt.$title;\n    var titleHtml = void 0;\n    if ($title) {\n        // 替换多语言\n        titleHtml = $title.html();\n        titleHtml = replaceLang(editor, titleHtml);\n        $title.html(titleHtml);\n\n        $title.addClass('w-e-dp-title');\n        $container.append($title);\n    }\n\n    var list = opt.list || [];\n    var type = opt.type || 'list'; // 'list' 列表形式（如“标题”菜单） / 'inline-block' 块状形式（如“颜色”菜单）\n    var onClick = opt.onClick || _emptyFn;\n\n    // 加入 DOM 并绑定事件\n    var $list = $('<ul class=\"' + (type === 'list' ? 'w-e-list' : 'w-e-block') + '\"></ul>');\n    $container.append($list);\n    list.forEach(function (item) {\n        var $elem = item.$elem;\n\n        // 替换多语言\n        var elemHtml = $elem.html();\n        elemHtml = replaceLang(editor, elemHtml);\n        $elem.html(elemHtml);\n\n        var value = item.value;\n        var $li = $('<li class=\"w-e-item\"></li>');\n        if ($elem) {\n            $li.append($elem);\n            $list.append($li);\n            $li.on('click', function (e) {\n                onClick(value);\n\n                // 隐藏\n                _this.hideTimeoutId = setTimeout(function () {\n                    _this.hide();\n                }, 0);\n            });\n        }\n    });\n\n    // 绑定隐藏事件\n    $container.on('mouseleave', function (e) {\n        _this.hideTimeoutId = setTimeout(function () {\n            _this.hide();\n        }, 0);\n    });\n\n    // 记录属性\n    this.$container = $container;\n\n    // 基本属性\n    this._rendered = false;\n    this._show = false;\n}\n\n// 原型\nDropList.prototype = {\n    constructor: DropList,\n\n    // 显示（插入DOM）\n    show: function show() {\n        if (this.hideTimeoutId) {\n            // 清除之前的定时隐藏\n            clearTimeout(this.hideTimeoutId);\n        }\n\n        var menu = this.menu;\n        var $menuELem = menu.$elem;\n        var $container = this.$container;\n        if (this._show) {\n            return;\n        }\n        if (this._rendered) {\n            // 显示\n            $container.show();\n        } else {\n            // 加入 DOM 之前先定位位置\n            var menuHeight = $menuELem.getSizeData().height || 0;\n            var width = this.opt.width || 100; // 默认为 100\n            $container.css('margin-top', menuHeight + 'px').css('width', width + 'px');\n\n            // 加入到 DOM\n            $menuELem.append($container);\n            this._rendered = true;\n        }\n\n        // 修改属性\n        this._show = true;\n    },\n\n    // 隐藏（移除DOM）\n    hide: function hide() {\n        if (this.showTimeoutId) {\n            // 清除之前的定时显示\n            clearTimeout(this.showTimeoutId);\n        }\n\n        var $container = this.$container;\n        if (!this._show) {\n            return;\n        }\n        // 隐藏并需改属性\n        $container.hide();\n        this._show = false;\n    }\n};\n\n/*\n    menu - header\n*/\n// 构造函数\nfunction Head(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-header\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>设置标题</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<h1>H1</h1>'), value: '<h1>' }, { $elem: $('<h2>H2</h2>'), value: '<h2>' }, { $elem: $('<h3>H3</h3>'), value: '<h3>' }, { $elem: $('<h4>H4</h4>'), value: '<h4>' }, { $elem: $('<h5>H5</h5>'), value: '<h5>' }, { $elem: $('<p>正文</p>'), value: '<p>' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 Head 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nHead.prototype = {\n    constructor: Head,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        if (editor.$textElem.equal($selectionElem)) {\n            // 不能选中多行来设置标题，否则会出现问题\n            // 例如选中的是 <p>xxx</p><p>yyy</p> 来设置标题，设置之后会成为 <h1>xxx<br>yyy</h1> 不符合预期\n            return;\n        }\n\n        editor.cmd.do('formatBlock', value);\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var reg = /^h/i;\n        var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n        if (reg.test(cmdValue)) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - fontSize\n*/\n\n// 构造函数\nfunction FontSize(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-text-heigh\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 160,\n        $title: $('<p>字号</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span style=\"font-size: x-small;\">x-small</span>'), value: '1' }, { $elem: $('<span style=\"font-size: small;\">small</span>'), value: '2' }, { $elem: $('<span>normal</span>'), value: '3' }, { $elem: $('<span style=\"font-size: large;\">large</span>'), value: '4' }, { $elem: $('<span style=\"font-size: x-large;\">x-large</span>'), value: '5' }, { $elem: $('<span style=\"font-size: xx-large;\">xx-large</span>'), value: '6' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 FontSize 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nFontSize.prototype = {\n    constructor: FontSize,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('fontSize', value);\n    }\n};\n\n/*\n    menu - fontName\n*/\n\n// 构造函数\nfunction FontName(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-font\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 获取配置的字体\n    var config = editor.config;\n    var fontNames = config.fontNames || [];\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>字体</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: fontNames.map(function (fontName) {\n            return { $elem: $('<span style=\"font-family: ' + fontName + ';\">' + fontName + '</span>'), value: fontName };\n        }),\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 FontName 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nFontName.prototype = {\n    constructor: FontName,\n\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('fontName', value);\n    }\n};\n\n/*\n    panel\n*/\n\nvar emptyFn = function emptyFn() {};\n\n// 记录已经显示 panel 的菜单\nvar _isCreatedPanelMenus = [];\n\n// 构造函数\nfunction Panel(menu, opt) {\n    this.menu = menu;\n    this.opt = opt;\n}\n\n// 原型\nPanel.prototype = {\n    constructor: Panel,\n\n    // 显示（插入DOM）\n    show: function show() {\n        var _this = this;\n\n        var menu = this.menu;\n        if (_isCreatedPanelMenus.indexOf(menu) >= 0) {\n            // 该菜单已经创建了 panel 不能再创建\n            return;\n        }\n\n        var editor = menu.editor;\n        var $body = $('body');\n        var $textContainerElem = editor.$textContainerElem;\n        var opt = this.opt;\n\n        // panel 的容器\n        var $container = $('<div class=\"w-e-panel-container\"></div>');\n        var width = opt.width || 300; // 默认 300px\n        $container.css('width', width + 'px').css('margin-left', (0 - width) / 2 + 'px');\n\n        // 添加关闭按钮\n        var $closeBtn = $('<i class=\"w-e-icon-close w-e-panel-close\"></i>');\n        $container.append($closeBtn);\n        $closeBtn.on('click', function () {\n            _this.hide();\n        });\n\n        // 准备 tabs 容器\n        var $tabTitleContainer = $('<ul class=\"w-e-panel-tab-title\"></ul>');\n        var $tabContentContainer = $('<div class=\"w-e-panel-tab-content\"></div>');\n        $container.append($tabTitleContainer).append($tabContentContainer);\n\n        // 设置高度\n        var height = opt.height;\n        if (height) {\n            $tabContentContainer.css('height', height + 'px').css('overflow-y', 'auto');\n        }\n\n        // tabs\n        var tabs = opt.tabs || [];\n        var tabTitleArr = [];\n        var tabContentArr = [];\n        tabs.forEach(function (tab, tabIndex) {\n            if (!tab) {\n                return;\n            }\n            var title = tab.title || '';\n            var tpl = tab.tpl || '';\n\n            // 替换多语言\n            title = replaceLang(editor, title);\n            tpl = replaceLang(editor, tpl);\n\n            // 添加到 DOM\n            var $title = $('<li class=\"w-e-item\">' + title + '</li>');\n            $tabTitleContainer.append($title);\n            var $content = $(tpl);\n            $tabContentContainer.append($content);\n\n            // 记录到内存\n            $title._index = tabIndex;\n            tabTitleArr.push($title);\n            tabContentArr.push($content);\n\n            // 设置 active 项\n            if (tabIndex === 0) {\n                $title._active = true;\n                $title.addClass('w-e-active');\n            } else {\n                $content.hide();\n            }\n\n            // 绑定 tab 的事件\n            $title.on('click', function (e) {\n                if ($title._active) {\n                    return;\n                }\n                // 隐藏所有的 tab\n                tabTitleArr.forEach(function ($title) {\n                    $title._active = false;\n                    $title.removeClass('w-e-active');\n                });\n                tabContentArr.forEach(function ($content) {\n                    $content.hide();\n                });\n\n                // 显示当前的 tab\n                $title._active = true;\n                $title.addClass('w-e-active');\n                $content.show();\n            });\n        });\n\n        // 绑定关闭事件\n        $container.on('click', function (e) {\n            // 点击时阻止冒泡\n            e.stopPropagation();\n        });\n        $body.on('click', function (e) {\n            _this.hide();\n        });\n\n        // 添加到 DOM\n        $textContainerElem.append($container);\n\n        // 绑定 opt 的事件，只有添加到 DOM 之后才能绑定成功\n        tabs.forEach(function (tab, index) {\n            if (!tab) {\n                return;\n            }\n            var events = tab.events || [];\n            events.forEach(function (event) {\n                var selector = event.selector;\n                var type = event.type;\n                var fn = event.fn || emptyFn;\n                var $content = tabContentArr[index];\n                $content.find(selector).on(type, function (e) {\n                    e.stopPropagation();\n                    var needToHide = fn(e);\n                    // 执行完事件之后，是否要关闭 panel\n                    if (needToHide) {\n                        _this.hide();\n                    }\n                });\n            });\n        });\n\n        // focus 第一个 elem\n        var $inputs = $container.find('input[type=text],textarea');\n        if ($inputs.length) {\n            $inputs.get(0).focus();\n        }\n\n        // 添加到属性\n        this.$container = $container;\n\n        // 隐藏其他 panel\n        this._hideOtherPanels();\n        // 记录该 menu 已经创建了 panel\n        _isCreatedPanelMenus.push(menu);\n    },\n\n    // 隐藏（移除DOM）\n    hide: function hide() {\n        var menu = this.menu;\n        var $container = this.$container;\n        if ($container) {\n            $container.remove();\n        }\n\n        // 将该 menu 记录中移除\n        _isCreatedPanelMenus = _isCreatedPanelMenus.filter(function (item) {\n            if (item === menu) {\n                return false;\n            } else {\n                return true;\n            }\n        });\n    },\n\n    // 一个 panel 展示时，隐藏其他 panel\n    _hideOtherPanels: function _hideOtherPanels() {\n        if (!_isCreatedPanelMenus.length) {\n            return;\n        }\n        _isCreatedPanelMenus.forEach(function (menu) {\n            var panel = menu.panel || {};\n            if (panel.hide) {\n                panel.hide();\n            }\n        });\n    }\n};\n\n/*\n    menu - link\n*/\n// 构造函数\nfunction Link(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-link\"></i></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nLink.prototype = {\n    constructor: Link,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $linkelem = void 0;\n\n        if (this._active) {\n            // 当前选区在链接里面\n            $linkelem = editor.selection.getSelectionContainerElem();\n            if (!$linkelem) {\n                return;\n            }\n            // 将该元素都包含在选取之内，以便后面整体替换\n            editor.selection.createRangeByElem($linkelem);\n            editor.selection.restoreSelection();\n            // 显示 panel\n            this._createPanel($linkelem.text(), $linkelem.attr('href'));\n        } else {\n            // 当前选区不在链接里面\n            if (editor.selection.isSelectionEmpty()) {\n                // 选区是空的，未选中内容\n                this._createPanel('', '');\n            } else {\n                // 选中内容了\n                this._createPanel(editor.selection.getSelectionText(), '');\n            }\n        }\n    },\n\n    // 创建 panel\n    _createPanel: function _createPanel(text, link) {\n        var _this = this;\n\n        // panel 中需要用到的id\n        var inputLinkId = getRandom('input-link');\n        var inputTextId = getRandom('input-text');\n        var btnOkId = getRandom('btn-ok');\n        var btnDelId = getRandom('btn-del');\n\n        //复制相关\n        var inputLinkIdCopy = getRandom('input-link-copy');\n        var inputTextIdCopy = getRandom('input-text-copy');\n        var btnOkIdCopy = getRandom('btn-ok-copy');\n        var btnDelIdCopy = getRandom('btn-del-copy');\n\n        //APP内跳转相关\n        var inputLinkIdApp = getRandom('input-link-app');\n        var inputTextIdApp = getRandom('input-text-app');\n        var btnOkIdApp = getRandom('btn-ok-app');\n        var btnDelIdApp = getRandom('btn-del-app');\n\n        //外部打开\n        var inputLinkIdOpen = getRandom('input-link-open');\n        var inputTextIdOpen = getRandom('input-text-open');\n        var btnOkIdOpen = getRandom('btn-ok-open');\n        var btnDelIdOpen = getRandom('btn-del-open');\n\n        // 是否显示“删除链接”\n        var delBtnDisplay = this._active ? 'inline-block' : 'none';\n\n        // 初始化并显示 panel\n        var panel = new Panel(this, {\n            width: 300,\n            // panel 中可包含多个 tab\n            tabs: [{\n                // tab 的标题\n                title: '链接',\n                // 模板\n                tpl: '<div>\\n                            <input id=\"' + inputTextId + '\" type=\"text\" class=\"block\" value=\"' + text + '\" placeholder=\"\\u94FE\\u63A5\\u6587\\u5B57\"/></td>\\n                            <input id=\"' + inputLinkId + '\" type=\"text\" class=\"block\" value=\"' + link + '\" placeholder=\"http://...\"/></td>\\n                            <div class=\"w-e-button-container\">\\n                                <button id=\"' + btnOkId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                                <button id=\"' + btnDelId + '\" class=\"gray right\" style=\"display:' + delBtnDisplay + '\">\\u5220\\u9664\\u94FE\\u63A5</button>\\n                            </div>\\n                        </div>',\n                // 事件绑定\n                events: [\n                // 插入链接\n                {\n                    selector: '#' + btnOkId,\n                    type: 'click',\n                    fn: function fn() {\n                        // 执行插入链接\n                        var $link = $('#' + inputLinkId);\n                        var $text = $('#' + inputTextId);\n                        var link = $link.val();\n                        var text = $text.val();\n                        _this._insertLink(text, link);\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                },\n                // 删除链接\n                {\n                    selector: '#' + btnDelId,\n                    type: 'click',\n                    fn: function fn() {\n                        // 执行删除链接\n                        _this._delLink();\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            }, // tab end\n\n            // tab 复制链接的标题\n            {\n                title: '复制',\n                // 模板\n                tpl: '<div>\\n                            <input id=\"' + inputTextIdCopy + '\" type=\"text\" class=\"block\" value=\"\" placeholder=\"\\u63CF\\u8FF0\\u6587\\u5B57\"/></td>\\n                            <input id=\"' + inputLinkIdCopy + '\" type=\"text\" class=\"block\" value=\"\" placeholder=\"\\u590D\\u5236\\u7684\\u5185\\u5BB9\"/></td>\\n                            <div class=\"w-e-button-container\">\\n                                <button id=\"' + btnOkIdCopy + '\" class=\"right\">\\u63D2\\u5165</button>\\n                            </div>\\n                        </div>',\n                // 事件绑定\n                events: [\n                // 插入链接\n                {\n                    selector: '#' + btnOkIdCopy,\n                    type: 'click',\n                    fn: function fn() {\n                        // 执行插入链接\n                        var $link = $('#' + inputLinkIdCopy);\n                        var $text = $('#' + inputTextIdCopy);\n                        var link = $link.val();\n                        var text = $text.val();\n                        _this._insertLinkCopy(text, link);\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                },\n                // 删除链接\n                {\n                    selector: '#' + btnDelIdCopy,\n                    type: 'click',\n                    fn: function fn() {\n                        // 执行删除链接\n                        _this._delLinkCopy();\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            },\n            // tab end\n            // tab APP外打开跳转\n            {\n\n                title: '外链',\n                // 模板\n                tpl: '<div>\\n                            <input id=\"' + inputTextIdOpen + '\" type=\"text\" class=\"block\" value=\"\" placeholder=\"\\u63CF\\u8FF0\\u6587\\u5B57\"/></td>\\n                            <input id=\"' + inputLinkIdOpen + '\" type=\"text\" class=\"block\" value=\"\" placeholder=\"\\u6253\\u5F00\\u94FE\\u63A5\\u5730\\u5740\\uFF1Ahttps://...\"/></td>\\n                            <div class=\"w-e-button-container\">\\n                                <button id=\"' + btnOkIdOpen + '\" class=\"right\">\\u63D2\\u5165</button>\\n                            </div>\\n                        </div>',\n                // 事件绑定\n                events: [\n                // 插入链接\n                {\n                    selector: '#' + btnOkIdOpen,\n                    type: 'click',\n                    fn: function fn() {\n                        // 执行插入链接\n                        var $link = $('#' + inputLinkIdOpen);\n                        var $text = $('#' + inputTextIdOpen);\n                        var link = $link.val();\n                        var text = $text.val();\n                        _this._insertLinkOpen(text, link);\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            },\n\n            // tab APP内跳转\n            {\n                title: '内部跳转',\n                // 模板\n                tpl: '<div>\\n                            <input id=\"' + inputTextIdApp + '\" type=\"text\" class=\"block\" value=\"' + text + '\" placeholder=\"\\u63CF\\u8FF0\\u6587\\u5B57\"/></td>\\n                            <input id=\"' + inputLinkIdApp + '\" type=\"text\" class=\"block\" value=\"' + link + '\" placeholder=\"\\u6587\\u7AE0id a:1 \\u4EFB\\u52A1id t:1\"/></td>\\n                            <div class=\"w-e-button-container\">\\n                                <button id=\"' + btnOkIdApp + '\" class=\"right\">\\u63D2\\u5165</button>\\n                            </div>\\n                        </div>',\n                // 事件绑定\n                events: [\n                // 插入链接\n                {\n                    selector: '#' + btnOkIdApp,\n                    type: 'click',\n                    fn: function fn() {\n                        // 执行插入链接\n                        var $link = $('#' + inputLinkIdApp);\n                        var $text = $('#' + inputTextIdApp);\n                        var link = $link.val();\n                        var text = $text.val();\n                        _this._insertLinkApp(text, link);\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            }] // tabs end\n        });\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 删除当前链接\n    _delLink: function _delLink() {\n        if (!this._active) {\n            return;\n        }\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var selectionText = editor.selection.getSelectionText();\n        editor.cmd.do('insertHTML', '<span>' + selectionText + '</span>');\n    },\n\n    // 插入链接\n    _insertLink: function _insertLink(text, link) {\n        var editor = this.editor;\n        var config = editor.config;\n        var linkCheck = config.linkCheck;\n        var checkResult = true; // 默认为 true\n        if (linkCheck && typeof linkCheck === 'function') {\n            checkResult = linkCheck(text, link);\n        }\n        if (checkResult === true) {\n            editor.cmd.do('insertHTML', '<a href=\"' + link + '\" target=\"_blank\">' + text + '</a>');\n        } else {\n            alert(checkResult);\n        }\n    },\n    // 插入复制按钮\n    _insertLinkCopy: function _insertLinkCopy(text, link) {\n        var editor = this.editor;\n        var config = editor.config;\n        var linkCheck = config.linkCheck;\n        var checkResult = true; // 默认为 true\n\n        if (linkCheck && typeof linkCheck === 'function') {\n            checkResult = linkCheck(text, link);\n        }\n\n        if (checkResult === true) {\n            var customCopyId = getRandom('customcopy');\n            /*            editor.cmd.do('insertHTML',`<br /><div class=\"custom-copy ${customCopyId}\" data-text=\"${link}\" data-clipboard-text=\"${link}\">\n            <span  target=\"_blank\">\n            <i class=\"custom-icon-copy\"></i>&nbsp; \n            <span class=\"custom-copy-text\">点此复制&nbsp;【</span>\n            <span class=\"custom-copy-title\">${text}</span>\n            <span class=\"custom-copy-text\">】</span>\n            </span></div><br />`)*/\n\n            editor.cmd.do('insertHTML', '<br /><div class=\"copyWapper ' + customCopyId + '\" data-text=\"' + link + '\" data-clipboard-text=\"' + link + '\">\\n        <div class=\"copyText\">' + text + '</div>\\n    </div><br />');\n        } else {\n            alert(checkResult);\n        }\n    },\n    // 打开内链\n    _insertLinkApp: function _insertLinkApp(text, link) {\n        var editor = this.editor;\n        var config = editor.config;\n        var linkCheck = config.linkCheck;\n        var checkResult = true; // 默认为 true\n\n        if (linkCheck && typeof linkCheck === 'function') {\n            checkResult = linkCheck(text, link);\n        }\n\n        if (checkResult === true) {\n            /*            editor.cmd.do('insertHTML', `<br /><div class=\"custom-app\" data-text=\"${link}\">\n            <span target=\"_blank\">\n            <i class=\"custom-icon-link\"></i>&nbsp; \n            <span class=\"custom-app-text\">点此跳转&nbsp;【</span>\n            <span class=\"custom-app-title\">${text}</span>\n            <span class=\"custom-app-text\">】</span>\n            </span></div><br />`)*/\n\n            var iconTypeClass = \"\";\n\n            //文章\n            if (link.match(new RegExp(\"^a\\:.*$\"))) {\n                iconTypeClass = \"\";\n            }\n\n            //任务\n            if (link.match(new RegExp(\"^t\\:.*$\"))) {\n                iconTypeClass = \"task\";\n            }\n\n            editor.cmd.do('insertHTML', '<br /><div class=\"bbox openAppPageWapper\" data-text=\"' + link + '\">\\n        <div class=\"bbox xycenter openAppPageLeft\">\\n            <div class=\"openAppPageIcon ' + iconTypeClass + '\">\\n            </div>\\n        </div>\\n        <div class=\"f1 bbox hideText2 openAppPageMiddle\" >\\n            <div>\\n                ' + text + '\\n            </div>\\n        </div>\\n        <div class=\"bbox xycenter openAppPageRight\">\\n            <i class=\"iconfont icon-bangdingshouji_fanhui\" ></i>\\n        </div>\\n    </div><br /><br />');\n        } else {\n            alert(checkResult);\n        }\n    },\n\n    // 外链打开\n    _insertLinkOpen: function _insertLinkOpen(text, link) {\n        var editor = this.editor;\n        var config = editor.config;\n        var linkCheck = config.linkCheck;\n        var checkResult = true; // 默认为 true\n        if (linkCheck && typeof linkCheck === 'function') {\n            checkResult = linkCheck(text, link);\n        }\n\n        if (checkResult === true) {\n            /*            editor.cmd.do('insertHTML', `<br /><div class=\"custom-open\" data-text=\"${link}\">\n            <span  target=\"_blank\">\n            <i class=\"custom-icon-link\"></i>&nbsp;\n            <span class=\"custom-open-text\">点此打开&nbsp;【</span>\n            <span class=\"custom-open-title\">${text}</span>\n            <span class=\"custom-open-text\">】</span>\n            </span></div><br />`)*/\n            editor.cmd.do('insertHTML', '<br /><div class=\"bbox openWebSiteWapper\" data-text=\"' + link + '\">\\n        <div class=\"f1 bbox tb openWebSiteLeft\">\\n            <div class=\"hideText2 f1 openWebSiteLeftTitle\">\\n                ' + text + '\\n            </div>\\n            <div class=\"hideText openWebSiteLeftLink\">\\n                <i class=\"iconfont icon-xiangqingye_tiaozhuanlianjie\"></i>\\n                <span>' + link + '</span>\\n            </div>\\n        </div>\\n        <div class=\"bbox xycenter openWebSiteRight\">\\n            <div class=\"openWebSiteIcon\">\\n            </div>\\n        </div>\\n    </div><br /><br />');\n        } else {\n            alert(checkResult);\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        if ($selectionELem.getNodeName() === 'A') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    italic-menu\n*/\n// 构造函数\nfunction Italic(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-italic\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nItalic.prototype = {\n    constructor: Italic,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 italic 命令\n        editor.cmd.do('italic');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('italic')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    redo-menu\n*/\n// 构造函数\nfunction Redo(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-redo\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nRedo.prototype = {\n    constructor: Redo,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n\n        // 执行 redo 命令\n        editor.cmd.do('redo');\n    }\n};\n\n/*\n    strikeThrough-menu\n*/\n// 构造函数\nfunction StrikeThrough(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-strikethrough\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nStrikeThrough.prototype = {\n    constructor: StrikeThrough,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 strikeThrough 命令\n        editor.cmd.do('strikeThrough');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('strikeThrough')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    underline-menu\n*/\n// 构造函数\nfunction Underline(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-underline\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nUnderline.prototype = {\n    constructor: Underline,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 underline 命令\n        editor.cmd.do('underline');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('underline')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    undo-menu\n*/\n// 构造函数\nfunction Undo(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-undo\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nUndo.prototype = {\n    constructor: Undo,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n\n        // 执行 undo 命令\n        editor.cmd.do('undo');\n    }\n};\n\n/*\n    menu - list\n*/\n// 构造函数\nfunction List(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-list2\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>设置列表</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span><i class=\"w-e-icon-list-numbered\"></i> 有序列表</span>'), value: 'insertOrderedList' }, { $elem: $('<span><i class=\"w-e-icon-list2\"></i> 无序列表</span>'), value: 'insertUnorderedList' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 List 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nList.prototype = {\n    constructor: List,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        editor.selection.restoreSelection();\n        if (editor.cmd.queryCommandState(value)) {\n            return;\n        }\n        editor.cmd.do(value);\n\n        // 验证列表是否被包裹在 <p> 之内\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        if ($selectionElem.getNodeName() === 'LI') {\n            $selectionElem = $selectionElem.parent();\n        }\n        if (/^ol|ul$/i.test($selectionElem.getNodeName()) === false) {\n            return;\n        }\n        if ($selectionElem.equal($textElem)) {\n            // 证明是顶级标签，没有被 <p> 包裹\n            return;\n        }\n        var $parent = $selectionElem.parent();\n        if ($parent.equal($textElem)) {\n            // $parent 是顶级标签，不能删除\n            return;\n        }\n\n        $selectionElem.insertAfter($parent);\n        $parent.remove();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('insertUnOrderedList') || editor.cmd.queryCommandState('insertOrderedList')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - justify\n*/\n// 构造函数\nfunction Justify(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-paragraph-left\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>对齐方式</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span><i class=\"w-e-icon-paragraph-left\"></i> 靠左</span>'), value: 'justifyLeft' }, { $elem: $('<span><i class=\"w-e-icon-paragraph-center\"></i> 居中</span>'), value: 'justifyCenter' }, { $elem: $('<span><i class=\"w-e-icon-paragraph-right\"></i> 靠右</span>'), value: 'justifyRight' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 List 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nJustify.prototype = {\n    constructor: Justify,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do(value);\n    }\n};\n\n/*\n    menu - Forecolor\n*/\n// 构造函数\nfunction ForeColor(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-pencil2\"></i></div>');\n    this.type = 'droplist';\n\n    // 获取配置的颜色\n    var config = editor.config;\n    var colors = config.colors || [];\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>文字颜色</p>'),\n        type: 'inline-block', // droplist 内容以 block 形式展示\n        list: colors.map(function (color) {\n            return { $elem: $('<i style=\"color:' + color + ';\" class=\"w-e-icon-pencil2\"></i>'), value: color };\n        }),\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 ForeColor 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nForeColor.prototype = {\n    constructor: ForeColor,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('foreColor', value);\n    }\n};\n\n/*\n    menu - BackColor\n*/\n// 构造函数\nfunction BackColor(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-paint-brush\"></i></div>');\n    this.type = 'droplist';\n\n    // 获取配置的颜色\n    var config = editor.config;\n    var colors = config.colors || [];\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>背景色</p>'),\n        type: 'inline-block', // droplist 内容以 block 形式展示\n        list: colors.map(function (color) {\n            return { $elem: $('<i style=\"color:' + color + ';\" class=\"w-e-icon-paint-brush\"></i>'), value: color };\n        }),\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 BackColor 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nBackColor.prototype = {\n    constructor: BackColor,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('backColor', value);\n    }\n};\n\n/*\n    menu - quote\n*/\n// 构造函数\nfunction Quote(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-quotes-left\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nQuote.prototype = {\n    constructor: Quote,\n\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        var nodeName = $selectionElem.getNodeName();\n\n        if (!UA.isIE()) {\n            if (nodeName === 'BLOCKQUOTE') {\n                // 撤销 quote\n                editor.cmd.do('formatBlock', '<P>');\n            } else {\n                // 转换为 quote\n                editor.cmd.do('formatBlock', '<BLOCKQUOTE>');\n            }\n            return;\n        }\n\n        // IE 中不支持 formatBlock <BLOCKQUOTE> ，要用其他方式兼容\n        var content = void 0,\n            $targetELem = void 0;\n        if (nodeName === 'P') {\n            // 将 P 转换为 quote\n            content = $selectionElem.text();\n            $targetELem = $('<blockquote>' + content + '</blockquote>');\n            $targetELem.insertAfter($selectionElem);\n            $selectionElem.remove();\n            return;\n        }\n        if (nodeName === 'BLOCKQUOTE') {\n            // 撤销 quote\n            content = $selectionElem.text();\n            $targetELem = $('<p>' + content + '</p>');\n            $targetELem.insertAfter($selectionElem);\n            $selectionElem.remove();\n        }\n    },\n\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var reg = /^BLOCKQUOTE$/i;\n        var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n        if (reg.test(cmdValue)) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - code\n*/\n// 构造函数\nfunction Code(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-terminal\"></i>\\n        </div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nCode.prototype = {\n    constructor: Code,\n\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $startElem = editor.selection.getSelectionStartElem();\n        var $endElem = editor.selection.getSelectionEndElem();\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n        var selectionText = editor.selection.getSelectionText();\n        var $code = void 0;\n\n        if (!$startElem.equal($endElem)) {\n            // 跨元素选择，不做处理\n            editor.selection.restoreSelection();\n            return;\n        }\n        if (!isSeleEmpty) {\n            // 选取不是空，用 <code> 包裹即可\n            $code = $('<code>' + selectionText + '</code>');\n            editor.cmd.do('insertElem', $code);\n            editor.selection.createRangeByElem($code, false);\n            editor.selection.restoreSelection();\n            return;\n        }\n\n        // 选取是空，且没有夸元素选择，则插入 <pre><code></code></prev>\n        if (this._active) {\n            // 选中状态，将编辑内容\n            this._createPanel($startElem.html());\n        } else {\n            // 未选中状态，将创建内容\n            this._createPanel();\n        }\n    },\n\n    _createPanel: function _createPanel(value) {\n        var _this = this;\n\n        // value - 要编辑的内容\n        value = value || '';\n        var type = !value ? 'new' : 'edit';\n        var textId = getRandom('texxt');\n        var btnId = getRandom('btn');\n\n        var panel = new Panel(this, {\n            width: 500,\n            // 一个 Panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '插入代码',\n                // 模板\n                tpl: '<div>\\n                        <textarea id=\"' + textId + '\" style=\"height:145px;;\">' + value + '</textarea>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    <div>',\n                // 事件绑定\n                events: [\n                // 插入代码\n                {\n                    selector: '#' + btnId,\n                    type: 'click',\n                    fn: function fn() {\n                        var $text = $('#' + textId);\n                        var text = $text.val() || $text.html();\n                        text = replaceHtmlSymbol(text);\n                        if (type === 'new') {\n                            // 新插入\n                            _this._insertCode(text);\n                        } else {\n                            // 编辑更新\n                            _this._updateCode(text);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }] // first tab end\n            }] // tabs end\n        }); // new Panel end\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入代码\n    _insertCode: function _insertCode(value) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', '<pre><code>' + value + '</code></pre><p><br></p>');\n    },\n\n    // 更新代码\n    _updateCode: function _updateCode(value) {\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        $selectionELem.html(value);\n        editor.selection.restoreSelection();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var $parentElem = $selectionELem.parent();\n        if ($selectionELem.getNodeName() === 'CODE' && $parentElem.getNodeName() === 'PRE') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - emoticon\n*/\n// 构造函数\nfunction Emoticon(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-happy\"></i>\\n        </div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nEmoticon.prototype = {\n    constructor: Emoticon,\n\n    onClick: function onClick() {\n        this._createPanel();\n    },\n\n    _createPanel: function _createPanel() {\n        var _this = this;\n\n        var editor = this.editor;\n        var config = editor.config;\n        // 获取表情配置\n        var emotions = config.emotions || [];\n\n        // 创建表情 dropPanel 的配置\n        var tabConfig = [];\n        emotions.forEach(function (emotData) {\n            var emotType = emotData.type;\n            var content = emotData.content || [];\n\n            // 这一组表情最终拼接出来的 html\n            var faceHtml = '';\n\n            // emoji 表情\n            if (emotType === 'emoji') {\n                content.forEach(function (item) {\n                    if (item) {\n                        faceHtml += '<span class=\"w-e-item\">' + item + '</span>';\n                    }\n                });\n            }\n            // 图片表情\n            if (emotType === 'image') {\n                content.forEach(function (item) {\n                    var src = item.src;\n                    var alt = item.alt;\n                    if (src) {\n                        // 加一个 data-w-e 属性，点击图片的时候不再提示编辑图片\n                        faceHtml += '<span class=\"w-e-item\"><img src=\"' + src + '\" alt=\"' + alt + '\" data-w-e=\"1\"/></span>';\n                    }\n                });\n            }\n\n            tabConfig.push({\n                title: emotData.title,\n                tpl: '<div class=\"w-e-emoticon-container\">' + faceHtml + '</div>',\n                events: [{\n                    selector: 'span.w-e-item',\n                    type: 'click',\n                    fn: function fn(e) {\n                        var target = e.target;\n                        var $target = $(target);\n                        var nodeName = $target.getNodeName();\n\n                        var insertHtml = void 0;\n                        if (nodeName === 'IMG') {\n                            // 插入图片\n                            insertHtml = $target.parent().html();\n                        } else {\n                            // 插入 emoji\n                            insertHtml = '<span>' + $target.html() + '</span>';\n                        }\n\n                        _this._insert(insertHtml);\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            });\n        });\n\n        var panel = new Panel(this, {\n            width: 300,\n            height: 200,\n            // 一个 Panel 包含多个 tab\n            tabs: tabConfig\n        });\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入表情\n    _insert: function _insert(emotHtml) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', emotHtml);\n    }\n};\n\n/*\n    menu - table\n*/\n// 构造函数\nfunction Table(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-table2\"></i></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nTable.prototype = {\n    constructor: Table,\n\n    onClick: function onClick() {\n        if (this._active) {\n            // 编辑现有表格\n            this._createEditPanel();\n        } else {\n            // 插入新表格\n            this._createInsertPanel();\n        }\n    },\n\n    // 创建插入新表格的 panel\n    _createInsertPanel: function _createInsertPanel() {\n        var _this = this;\n\n        // 用到的 id\n        var btnInsertId = getRandom('btn');\n        var textRowNum = getRandom('row');\n        var textColNum = getRandom('col');\n\n        var panel = new Panel(this, {\n            width: 250,\n            // panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '插入表格',\n                // 模板\n                tpl: '<div>\\n                        <p style=\"text-align:left; padding:5px 0;\">\\n                            \\u521B\\u5EFA\\n                            <input id=\"' + textRowNum + '\" type=\"text\" value=\"5\" style=\"width:40px;text-align:center;\"/>\\n                            \\u884C\\n                            <input id=\"' + textColNum + '\" type=\"text\" value=\"5\" style=\"width:40px;text-align:center;\"/>\\n                            \\u5217\\u7684\\u8868\\u683C\\n                        </p>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnInsertId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    // 点击按钮，插入表格\n                    selector: '#' + btnInsertId,\n                    type: 'click',\n                    fn: function fn() {\n                        var rowNum = parseInt($('#' + textRowNum).val());\n                        var colNum = parseInt($('#' + textColNum).val());\n\n                        if (rowNum && colNum && rowNum > 0 && colNum > 0) {\n                            // form 数据有效\n                            _this._insert(rowNum, colNum);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }] // first tab end\n            }] // tabs end\n        }); // panel end\n\n        // 展示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入表格\n    _insert: function _insert(rowNum, colNum) {\n        // 拼接 table 模板\n        var r = void 0,\n            c = void 0;\n        var html = '<table border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">';\n        for (r = 0; r < rowNum; r++) {\n            html += '<tr>';\n            if (r === 0) {\n                for (c = 0; c < colNum; c++) {\n                    html += '<th>&nbsp;</th>';\n                }\n            } else {\n                for (c = 0; c < colNum; c++) {\n                    html += '<td>&nbsp;</td>';\n                }\n            }\n            html += '</tr>';\n        }\n        html += '</table><p><br></p>';\n\n        // 执行命令\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', html);\n\n        // 防止 firefox 下出现 resize 的控制点\n        editor.cmd.do('enableObjectResizing', false);\n        editor.cmd.do('enableInlineTableEditing', false);\n    },\n\n    // 创建编辑表格的 panel\n    _createEditPanel: function _createEditPanel() {\n        var _this2 = this;\n\n        // 可用的 id\n        var addRowBtnId = getRandom('add-row');\n        var addColBtnId = getRandom('add-col');\n        var delRowBtnId = getRandom('del-row');\n        var delColBtnId = getRandom('del-col');\n        var delTableBtnId = getRandom('del-table');\n\n        // 创建 panel 对象\n        var panel = new Panel(this, {\n            width: 320,\n            // panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '编辑表格',\n                // 模板\n                tpl: '<div>\\n                        <div class=\"w-e-button-container\" style=\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\">\\n                            <button id=\"' + addRowBtnId + '\" class=\"left\">\\u589E\\u52A0\\u884C</button>\\n                            <button id=\"' + delRowBtnId + '\" class=\"red left\">\\u5220\\u9664\\u884C</button>\\n                            <button id=\"' + addColBtnId + '\" class=\"left\">\\u589E\\u52A0\\u5217</button>\\n                            <button id=\"' + delColBtnId + '\" class=\"red left\">\\u5220\\u9664\\u5217</button>\\n                        </div>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + delTableBtnId + '\" class=\"gray left\">\\u5220\\u9664\\u8868\\u683C</button>\\n                        </dv>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    // 增加行\n                    selector: '#' + addRowBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._addRow();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 增加列\n                    selector: '#' + addColBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._addCol();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除行\n                    selector: '#' + delRowBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delRow();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除列\n                    selector: '#' + delColBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delCol();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除表格\n                    selector: '#' + delTableBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delTable();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            }]\n        });\n        // 显示 panel\n        panel.show();\n    },\n\n    // 获取选中的单元格的位置信息\n    _getLocationData: function _getLocationData() {\n        var result = {};\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var nodeName = $selectionELem.getNodeName();\n        if (nodeName !== 'TD' && nodeName !== 'TH') {\n            return;\n        }\n\n        // 获取 td index\n        var $tr = $selectionELem.parent();\n        var $tds = $tr.children();\n        var tdLength = $tds.length;\n        $tds.forEach(function (td, index) {\n            if (td === $selectionELem[0]) {\n                // 记录并跳出循环\n                result.td = {\n                    index: index,\n                    elem: td,\n                    length: tdLength\n                };\n                return false;\n            }\n        });\n\n        // 获取 tr index\n        var $tbody = $tr.parent();\n        var $trs = $tbody.children();\n        var trLength = $trs.length;\n        $trs.forEach(function (tr, index) {\n            if (tr === $tr[0]) {\n                // 记录并跳出循环\n                result.tr = {\n                    index: index,\n                    elem: tr,\n                    length: trLength\n                };\n                return false;\n            }\n        });\n\n        // 返回结果\n        return result;\n    },\n\n    // 增加行\n    _addRow: function _addRow() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var $currentTr = $(trData.elem);\n        var tdData = locationData.td;\n        var tdLength = tdData.length;\n\n        // 拼接即将插入的字符串\n        var newTr = document.createElement('tr');\n        var tpl = '',\n            i = void 0;\n        for (i = 0; i < tdLength; i++) {\n            tpl += '<td>&nbsp;</td>';\n        }\n        newTr.innerHTML = tpl;\n        // 插入\n        $(newTr).insertAfter($currentTr);\n    },\n\n    // 增加列\n    _addCol: function _addCol() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var tdData = locationData.td;\n        var tdIndex = tdData.index;\n        var $currentTr = $(trData.elem);\n        var $trParent = $currentTr.parent();\n        var $trs = $trParent.children();\n\n        // 遍历所有行\n        $trs.forEach(function (tr) {\n            var $tr = $(tr);\n            var $tds = $tr.children();\n            var $currentTd = $tds.get(tdIndex);\n            var name = $currentTd.getNodeName().toLowerCase();\n\n            // new 一个 td，并插入\n            var newTd = document.createElement(name);\n            $(newTd).insertAfter($currentTd);\n        });\n    },\n\n    // 删除行\n    _delRow: function _delRow() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var $currentTr = $(trData.elem);\n        $currentTr.remove();\n    },\n\n    // 删除列\n    _delCol: function _delCol() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var tdData = locationData.td;\n        var tdIndex = tdData.index;\n        var $currentTr = $(trData.elem);\n        var $trParent = $currentTr.parent();\n        var $trs = $trParent.children();\n\n        // 遍历所有行\n        $trs.forEach(function (tr) {\n            var $tr = $(tr);\n            var $tds = $tr.children();\n            var $currentTd = $tds.get(tdIndex);\n            // 删除\n            $currentTd.remove();\n        });\n    },\n\n    // 删除表格\n    _delTable: function _delTable() {\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var $table = $selectionELem.parentUntil('table');\n        if (!$table) {\n            return;\n        }\n        $table.remove();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var nodeName = $selectionELem.getNodeName();\n        if (nodeName === 'TD' || nodeName === 'TH') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - video\n*/\n// 构造函数\nfunction Video(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-play\"></i></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nVideo.prototype = {\n    constructor: Video,\n\n    onClick: function onClick() {\n        this._createPanel();\n    },\n\n    _createPanel: function _createPanel() {\n        var _this = this;\n\n        // 创建 id\n        var textValId = getRandom('text-val');\n        var btnId = getRandom('btn');\n\n        // 创建 panel\n        var panel = new Panel(this, {\n            width: 350,\n            // 一个 panel 多个 tab\n            tabs: [{\n                // 标题\n                title: '插入视频',\n                // 模板\n                tpl: '<div>\\n                        <input id=\"' + textValId + '\" type=\"text\" class=\"block\" placeholder=\"\\u683C\\u5F0F\\u5982\\uFF1A<iframe src=... ></iframe>\"/>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    selector: '#' + btnId,\n                    type: 'click',\n                    fn: function fn() {\n                        var $text = $('#' + textValId);\n                        var val = $text.val().trim();\n\n                        // 测试用视频地址\n                        // <iframe height=498 width=510 src='http://player.youku.com/embed/XMjcwMzc3MzM3Mg==' frameborder=0 'allowfullscreen'></iframe>\n\n                        if (val) {\n                            // 插入视频\n                            _this._insert(val);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }] // first tab end\n            }] // tabs end\n        }); // panel end\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入视频\n    _insert: function _insert(val) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', val + '<p><br></p>');\n    }\n};\n\n/*\n    menu - img\n*/\n// 构造函数\nfunction Image(editor) {\n    this.editor = editor;\n    var imgMenuId = getRandom('w-e-img');\n    this.$elem = $('<div class=\"w-e-menu\" id=\"' + imgMenuId + '\"><i class=\"w-e-icon-image\"></i></div>');\n    editor.imgMenuId = imgMenuId;\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nImage.prototype = {\n    constructor: Image,\n\n    onClick: function onClick() {\n        var editor = this.editor;\n        var config = editor.config;\n        if (config.qiniu) {\n            return;\n        }\n        if (this._active) {\n            this._createEditPanel();\n        } else {\n            this._createInsertPanel();\n        }\n    },\n\n    _createEditPanel: function _createEditPanel() {\n        var editor = this.editor;\n\n        // id\n        var width30 = getRandom('width-30');\n        var width50 = getRandom('width-50');\n        var width100 = getRandom('width-100');\n        var delBtn = getRandom('del-btn');\n\n        // tab 配置\n        var tabsConfig = [{\n            title: '编辑图片',\n            tpl: '<div>\\n                    <div class=\"w-e-button-container\" style=\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\">\\n                        <span style=\"float:left;font-size:14px;margin:4px 5px 0 5px;color:#333;\">\\u6700\\u5927\\u5BBD\\u5EA6\\uFF1A</span>\\n                        <button id=\"' + width30 + '\" class=\"left\">30%</button>\\n                        <button id=\"' + width50 + '\" class=\"left\">50%</button>\\n                        <button id=\"' + width100 + '\" class=\"left\">100%</button>\\n                    </div>\\n                    <div class=\"w-e-button-container\">\\n                        <button id=\"' + delBtn + '\" class=\"gray left\">\\u5220\\u9664\\u56FE\\u7247</button>\\n                    </dv>\\n                </div>',\n            events: [{\n                selector: '#' + width30,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '30%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + width50,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '50%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + width100,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '100%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + delBtn,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.remove();\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }]\n        }];\n\n        // 创建 panel 并显示\n        var panel = new Panel(this, {\n            width: 300,\n            tabs: tabsConfig\n        });\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    _createInsertPanel: function _createInsertPanel() {\n        var editor = this.editor;\n        var uploadImg = editor.uploadImg;\n        var config = editor.config;\n\n        // id\n        var upTriggerId = getRandom('up-trigger');\n        var upFileId = getRandom('up-file');\n        var linkUrlId = getRandom('link-url');\n        var linkBtnId = getRandom('link-btn');\n\n        // tabs 的配置\n        var tabsConfig = [{\n            title: '上传图片',\n            tpl: '<div class=\"w-e-up-img-container\">\\n                    <div id=\"' + upTriggerId + '\" class=\"w-e-up-btn\">\\n                        <i class=\"w-e-icon-upload2\"></i>\\n                    </div>\\n                    <div style=\"display:none;\">\\n                        <input id=\"' + upFileId + '\" type=\"file\" multiple=\"multiple\" accept=\"image/jpg,image/jpeg,image/png,image/gif,image/bmp\"/>\\n                    </div>\\n                </div>',\n            events: [{\n                // 触发选择图片\n                selector: '#' + upTriggerId,\n                type: 'click',\n                fn: function fn() {\n                    var $file = $('#' + upFileId);\n                    var fileElem = $file[0];\n                    if (fileElem) {\n                        fileElem.click();\n                    } else {\n                        // 返回 true 可关闭 panel\n                        return true;\n                    }\n                }\n            }, {\n                // 选择图片完毕\n                selector: '#' + upFileId,\n                type: 'change',\n                fn: function fn() {\n                    var $file = $('#' + upFileId);\n                    var fileElem = $file[0];\n                    if (!fileElem) {\n                        // 返回 true 可关闭 panel\n                        return true;\n                    }\n\n                    // 获取选中的 file 对象列表\n                    var fileList = fileElem.files;\n                    if (fileList.length) {\n                        uploadImg.uploadImg(fileList);\n                    }\n\n                    // 返回 true 可关闭 panel\n                    return true;\n                }\n            }]\n        }, // first tab end\n        {\n            title: '网络图片',\n            tpl: '<div>\\n                    <input id=\"' + linkUrlId + '\" type=\"text\" class=\"block\" placeholder=\"\\u56FE\\u7247\\u94FE\\u63A5\"/></td>\\n                    <div class=\"w-e-button-container\">\\n                        <button id=\"' + linkBtnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                    </div>\\n                </div>',\n            events: [{\n                selector: '#' + linkBtnId,\n                type: 'click',\n                fn: function fn() {\n                    var $linkUrl = $('#' + linkUrlId);\n                    var url = $linkUrl.val().trim();\n\n                    if (url) {\n                        uploadImg.insertLinkImg(url);\n                    }\n\n                    // 返回 true 表示函数执行结束之后关闭 panel\n                    return true;\n                }\n            }] // second tab end\n        }]; // tabs end\n\n        // 判断 tabs 的显示\n        var tabsConfigResult = [];\n        if ((config.uploadImgShowBase64 || config.uploadImgServer || config.customUploadImg) && window.FileReader) {\n            // 显示“上传图片”\n            tabsConfigResult.push(tabsConfig[0]);\n        }\n        if (config.showLinkImg) {\n            // 显示“网络图片”\n            tabsConfigResult.push(tabsConfig[1]);\n        }\n\n        // 创建 panel 并显示\n        var panel = new Panel(this, {\n            width: 300,\n            tabs: tabsConfigResult\n        });\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor._selectedImg) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - link\n*/\n\n/* eslint-disable */\n\n// 构造函数\nfunction Tool(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"iconfont icon-shouye_faxian\"></i></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nTool.prototype = {\n    constructor: Tool,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $linkelem = void 0;\n\n        if (this._active) {\n            // 当前选区在链接里面\n            $linkelem = editor.selection.getSelectionContainerElem();\n            if (!$linkelem) {\n                return;\n            }\n            // 将该元素都包含在选取之内，以便后面整体替换\n            editor.selection.createRangeByElem($linkelem);\n            editor.selection.restoreSelection();\n            // 显示 panel\n            this._createPanel($linkelem.text(), $linkelem.attr('href'));\n        } else {\n            // 当前选区不在链接里面\n            if (editor.selection.isSelectionEmpty()) {\n                // 选区是空的，未选中内容\n                this._createPanel('', '');\n            } else {\n                // 选中内容了\n                this._createPanel(editor.selection.getSelectionText(), '');\n            }\n        }\n    },\n\n    // 创建 panel\n    _createPanel: function _createPanel(text, link) {\n        var _this = this;\n\n        // panel 中需要用到的id\n        var inputLinkId = getRandom('input-link');\n        var inputTextId = getRandom('input-text');\n        var btnOkId = getRandom('btn-ok');\n        var btnDelId = getRandom('btn-del');\n\n        //复制相关\n        var inputLinkIdCopy = getRandom('input-link-copy');\n        var inputTextIdCopy = getRandom('input-text-copy');\n        var btnOkIdCopy = getRandom('btn-ok-copy');\n        var btnDelIdCopy = getRandom('btn-del-copy');\n\n        //APP内跳转相关\n        var inputLinkIdApp = getRandom('input-link-app');\n        var inputTextIdApp = getRandom('input-text-app');\n        var btnOkIdApp = getRandom('btn-ok-app');\n        var btnDelIdApp = getRandom('btn-del-app');\n\n        //外部打开\n        var inputLinkIdOpen = getRandom('input-link-open');\n        var inputTextIdOpen = getRandom('input-text-open');\n        var btnOkIdOpen = getRandom('btn-ok-open');\n        var btnDelIdOpen = getRandom('btn-del-open');\n\n        // 是否显示“删除链接”\n        var delBtnDisplay = this._active ? 'inline-block' : 'none';\n\n        // 初始化并显示 panel\n        var panel = new Panel(this, {\n            width: 350,\n            // panel 中可包含多个 tab\n            tabs: [{\n                // tab 的标题\n                title: '链接',\n                // 模板\n                tpl: '<div>\\n                            <input id=\"' + inputTextId + '\" type=\"text\" class=\"block\" value=\"' + text + '\" placeholder=\"\\u94FE\\u63A5\\u6587\\u5B57\"/></td>\\n                            <input id=\"' + inputLinkId + '\" type=\"text\" class=\"block\" value=\"' + link + '\" placeholder=\"http://...\"/></td>\\n                            <div class=\"w-e-button-container\">\\n                                <button id=\"' + btnOkId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                                <button id=\"' + btnDelId + '\" class=\"gray right\" style=\"display:' + delBtnDisplay + '\">\\u5220\\u9664\\u94FE\\u63A5</button>\\n                            </div>\\n                        </div>',\n                // 事件绑定\n                events: [\n                // 插入链接\n                {\n                    selector: '#' + btnOkId,\n                    type: 'click',\n                    fn: function fn() {\n                        // 执行插入链接\n                        var $link = $('#' + inputLinkId);\n                        var $text = $('#' + inputTextId);\n                        var link = $link.val();\n                        var text = $text.val();\n                        _this._insertLink(text, link);\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                },\n                // 删除链接\n                {\n                    selector: '#' + btnDelId,\n                    type: 'click',\n                    fn: function fn() {\n                        // 执行删除链接\n                        _this._delLink();\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            }, // tab end\n\n            // tab 复制链接的标题\n            {\n                title: '复制',\n                // 模板\n                tpl: '<div>\\n                            <input id=\"' + inputTextIdCopy + '\" type=\"text\" class=\"block\" value=\"\" placeholder=\"\\u63CF\\u8FF0\\u6587\\u5B57\"/></td>\\n                            <input id=\"' + inputLinkIdCopy + '\" type=\"text\" class=\"block\" value=\"\" placeholder=\"\\u590D\\u5236\\u7684\\u5185\\u5BB9\"/></td>\\n                            <div class=\"w-e-button-container\">\\n                                <button id=\"' + btnOkIdCopy + '\" class=\"right\">\\u63D2\\u5165</button>\\n                            </div>\\n                        </div>',\n                // 事件绑定\n                events: [\n                // 插入链接\n                {\n                    selector: '#' + btnOkIdCopy,\n                    type: 'click',\n                    fn: function fn() {\n                        // 执行插入链接\n                        var $link = $('#' + inputLinkIdCopy);\n                        var $text = $('#' + inputTextIdCopy);\n                        var link = $link.val();\n                        var text = $text.val();\n                        _this._insertLinkCopy(text, link);\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                },\n                // 删除链接\n                {\n                    selector: '#' + btnDelIdCopy,\n                    type: 'click',\n                    fn: function fn() {\n                        // 执行删除链接\n                        _this._delLinkCopy();\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            },\n            // tab end\n            // tab APP外打开跳转\n            {\n\n                title: '外链',\n                // 模板\n                tpl: '<div>\\n                            <input id=\"' + inputTextIdOpen + '\" type=\"text\" class=\"block\" value=\"\" placeholder=\"\\u63CF\\u8FF0\\u6587\\u5B57\"/></td>\\n                            <input id=\"' + inputLinkIdOpen + '\" type=\"text\" class=\"block\" value=\"\" placeholder=\"\\u6253\\u5F00\\u94FE\\u63A5\\u5730\\u5740\\uFF1Ahttps://...\"/></td>\\n                            <div class=\"w-e-button-container\">\\n                                <button id=\"' + btnOkIdOpen + '\" class=\"right\">\\u63D2\\u5165</button>\\n                            </div>\\n                        </div>',\n                // 事件绑定\n                events: [\n                // 插入链接\n                {\n                    selector: '#' + btnOkIdOpen,\n                    type: 'click',\n                    fn: function fn() {\n                        // 执行插入链接\n                        var $link = $('#' + inputLinkIdOpen);\n                        var $text = $('#' + inputTextIdOpen);\n                        var link = $link.val();\n                        var text = $text.val();\n                        _this._insertLinkOpen(text, link);\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            },\n\n            // tab APP内跳转\n            {\n                title: '内链',\n                // 模板\n                tpl: '<div>\\n                            <input id=\"' + inputTextIdApp + '\" type=\"text\" class=\"block\" value=\"' + text + '\" placeholder=\"\\u63CF\\u8FF0\\u6587\\u5B57\"/></td>\\n                            <input id=\"' + inputLinkIdApp + '\" type=\"text\" class=\"block\" value=\"' + link + '\" placeholder=\"\\u6587\\u7AE0id\"/></td>\\n                            <div class=\"w-e-button-container\">\\n                                <button id=\"' + btnOkIdApp + '\" class=\"right\">\\u63D2\\u5165</button>\\n                            </div>\\n                        </div>',\n                // 事件绑定\n                events: [\n                // 插入链接\n                {\n                    selector: '#' + btnOkIdApp,\n                    type: 'click',\n                    fn: function fn() {\n                        // 执行插入链接\n                        var $link = $('#' + inputLinkIdApp);\n                        var $text = $('#' + inputTextIdApp);\n                        var link = $link.val();\n                        var text = $text.val();\n                        _this._insertLinkApp(text, link);\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            }] // tabs end\n        });\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 删除当前链接\n    _delLink: function _delLink() {\n        if (!this._active) {\n            return;\n        }\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var selectionText = editor.selection.getSelectionText();\n        editor.cmd.do('insertHTML', '<span>' + selectionText + '</span>');\n    },\n\n    // 插入链接\n    _insertLink: function _insertLink(text, link) {\n        var editor = this.editor;\n        var config = editor.config;\n        var linkCheck = config.linkCheck;\n        var checkResult = true; // 默认为 true\n        if (linkCheck && typeof linkCheck === 'function') {\n            checkResult = linkCheck(text, link);\n        }\n        if (checkResult === true) {\n            editor.cmd.do('insertHTML', '<a href=\"' + link + '\" target=\"_blank\">' + text + '</a>');\n        } else {\n            alert(checkResult);\n        }\n    },\n    // 插入复制按钮\n    _insertLinkCopy: function _insertLinkCopy(text, link) {\n        var editor = this.editor;\n        var config = editor.config;\n        var linkCheck = config.linkCheck;\n        var checkResult = true; // 默认为 true\n\n        if (linkCheck && typeof linkCheck === 'function') {\n            checkResult = linkCheck(text, link);\n        }\n\n        if (checkResult === true) {\n            var customCopyId = getRandom('customcopy');\n            /*            editor.cmd.do('insertHTML',`<br /><div class=\"custom-copy ${customCopyId}\" data-text=\"${link}\" data-clipboard-text=\"${link}\">\n            <span  target=\"_blank\">\n            <i class=\"custom-icon-copy\"></i>&nbsp; \n            <span class=\"custom-copy-text\">点此复制&nbsp;【</span>\n            <span class=\"custom-copy-title\">${text}</span>\n            <span class=\"custom-copy-text\">】</span>\n            </span></div><br />`)*/\n\n            editor.cmd.do('insertHTML', '<br /><div class=\"copyWapper ' + customCopyId + '\" data-text=\"' + link + '\" data-clipboard-text=\"' + link + '\">\\n        <div class=\"copyText\">' + text + '</div>\\n    </div><br />');\n        } else {\n            alert(checkResult);\n        }\n    },\n    // 打开内链\n    _insertLinkApp: function _insertLinkApp(text, link) {\n        var editor = this.editor;\n        var config = editor.config;\n        var linkCheck = config.linkCheck;\n        var checkResult = true; // 默认为 true\n\n        if (linkCheck && typeof linkCheck === 'function') {\n            checkResult = linkCheck(text, link);\n        }\n\n        if (checkResult === true) {\n            /*            editor.cmd.do('insertHTML', `<br /><div class=\"custom-app\" data-text=\"${link}\">\n            <span target=\"_blank\">\n            <i class=\"custom-icon-link\"></i>&nbsp; \n            <span class=\"custom-app-text\">点此跳转&nbsp;【</span>\n            <span class=\"custom-app-title\">${text}</span>\n            <span class=\"custom-app-text\">】</span>\n            </span></div><br />`)*/\n\n            var iconImg = \"//imgs.wbwan.vip/zhanneiwenzhang.png\";\n            var iconType = \"article\";\n\n            //文章\n            if (link.match(new RegExp(\"^a\\:.*$\"))) {\n                iconImg = \"//imgs.wbwan.vip/zhanneiwenzhang.png\";\n                iconType = \"article\";\n            }\n\n            //任务\n            if (link.match(new RegExp(\"^t\\:.*$\"))) {\n                iconImg = \"//imgs.wbwan.vip/renwuxuanshang.png\";\n                iconType = \"task\";\n            }\n\n            editor.cmd.do('insertHTML', '<br /><div class=\"bbox openAppPageWapper\" data-text=\"' + link + '\">\\n        <div class=\"bbox xycenter openAppPageLeft\">\\n            <div class=\"openAppPageIcon\" style=\"background-image: url(\\'' + iconImg + '\\');\">\\n                <!--<img src=\"https://imgs.wbwan.vip/zhanneiwenzhang.png\" width=\"100%\" alt=\"\">-->\\n            </div>\\n        </div>\\n        <div class=\"f1 bbox hideText2 openAppPageMiddle\" >\\n            <div>\\n                ' + text + '\\n            </div>\\n        </div>\\n        <div class=\"bbox xycenter openAppPageRight\">\\n            <i class=\"iconfont icon-bangdingshouji_fanhui\" ></i>\\n        </div>\\n    </div><br /><br />');\n        } else {\n            alert(checkResult);\n        }\n    },\n\n    // 外链打开\n    _insertLinkOpen: function _insertLinkOpen(text, link) {\n        var editor = this.editor;\n        var config = editor.config;\n        var linkCheck = config.linkCheck;\n        var checkResult = true; // 默认为 true\n        if (linkCheck && typeof linkCheck === 'function') {\n            checkResult = linkCheck(text, link);\n        }\n\n        if (checkResult === true) {\n            /*            editor.cmd.do('insertHTML', `<br /><div class=\"custom-open\" data-text=\"${link}\">\n            <span  target=\"_blank\">\n            <i class=\"custom-icon-link\"></i>&nbsp;\n            <span class=\"custom-open-text\">点此打开&nbsp;【</span>\n            <span class=\"custom-open-title\">${text}</span>\n            <span class=\"custom-open-text\">】</span>\n            </span></div><br />`)*/\n            editor.cmd.do('insertHTML', '<br /><div class=\"bbox openWebSiteWapper\" data-text=\"' + link + '\">\\n        <div class=\"f1 bbox tb openWebSiteLeft\">\\n            <div class=\"hideText2 f1 openWebSiteLeftTitle\">\\n                ' + text + '\\n            </div>\\n            <div class=\"hideText openWebSiteLeftLink\">\\n                <i class=\"iconfont icon-xiangqingye_tiaozhuanlianjie\"></i>\\n                <span>' + link + '</span>\\n            </div>\\n        </div>\\n        <div class=\"bbox xycenter openWebSiteRight\">\\n            <div class=\"openWebSiteIcon\" style=\"background-image: url(\\'//imgs.wbwan.vip/wangluo.png\\');\">\\n                <!--<img src=\"https://imgs.wbwan.vip/wangluo.png\" width=\"100%\" alt=\"\">-->\\n            </div>\\n        </div>\\n    </div><br /><br />');\n        } else {\n            alert(checkResult);\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        if ($selectionELem.getNodeName() === 'A') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    fullscreen-menu\n*/\n// 构造函数\nfunction FullScreen(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"iconfont icon-quanping1\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nFullScreen.prototype = {\n    constructor: FullScreen,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var config = editor.config;\n\n        try {\n            window.wangEditorToogleFullScreen(config.editorId);\n            if (wangEditorIsFullScreen[config.editorId]) {\n                this._active = true;\n                $elem.addClass('w-e-active');\n            } else {\n                this._active = false;\n                $elem.removeClass('w-e-active');\n            }\n        } catch (e) {\n            console.log(e);\n        }\n\n        // 执行 undo 命令\n        //editor.cmd.do('undo')\n    },\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n\n        /*        const $selectionELem = editor.selection.getSelectionContainerElem()\n                if (!$selectionELem) {\n                    return\n                }\n                if ($selectionELem.getNodeName() === 'A') {\n                    this._active = true\n                    $elem.addClass('w-e-active')\n                } else {\n                    this._active = false\n                    $elem.removeClass('w-e-active')\n                }*/\n    }\n};\n\n/*\n    所有菜单的汇总\n*/\n\n// 存储菜单的构造函数\nvar MenuConstructors = {};\n\nMenuConstructors.bold = Bold;\n\nMenuConstructors.head = Head;\n\nMenuConstructors.fontSize = FontSize;\n\nMenuConstructors.fontName = FontName;\n\nMenuConstructors.link = Link;\n\nMenuConstructors.italic = Italic;\n\nMenuConstructors.redo = Redo;\n\nMenuConstructors.strikeThrough = StrikeThrough;\n\nMenuConstructors.underline = Underline;\n\nMenuConstructors.undo = Undo;\n\nMenuConstructors.list = List;\n\nMenuConstructors.justify = Justify;\n\nMenuConstructors.foreColor = ForeColor;\n\nMenuConstructors.backColor = BackColor;\n\nMenuConstructors.quote = Quote;\n\nMenuConstructors.code = Code;\n\nMenuConstructors.emoticon = Emoticon;\n\nMenuConstructors.table = Table;\n\nMenuConstructors.video = Video;\n\nMenuConstructors.image = Image;\n\nMenuConstructors.tool = Tool;\n\nMenuConstructors.fullscreen = FullScreen;\n\n/*\n    菜单集合\n*/\n// 构造函数\nfunction Menus(editor) {\n    this.editor = editor;\n    this.menus = {};\n}\n\n// 修改原型\nMenus.prototype = {\n    constructor: Menus,\n\n    // 初始化菜单\n    init: function init() {\n        var _this = this;\n\n        var editor = this.editor;\n        var config = editor.config || {};\n        var configMenus = config.menus || []; // 获取配置中的菜单\n\n        // 根据配置信息，创建菜单\n        configMenus.forEach(function (menuKey) {\n            var MenuConstructor = MenuConstructors[menuKey];\n            if (MenuConstructor && typeof MenuConstructor === 'function') {\n                // 创建单个菜单\n                _this.menus[menuKey] = new MenuConstructor(editor);\n            }\n        });\n\n        // 添加到菜单栏\n        this._addToToolbar();\n\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 添加到菜单栏\n    _addToToolbar: function _addToToolbar() {\n        var editor = this.editor;\n        var $toolbarElem = editor.$toolbarElem;\n        var menus = this.menus;\n        var config = editor.config;\n        // config.zIndex 是配置的编辑区域的 z-index，菜单的 z-index 得在其基础上 +1\n        var zIndex = config.zIndex + 1;\n        objForEach(menus, function (key, menu) {\n            var $elem = menu.$elem;\n            if ($elem) {\n                // 设置 z-index  todo wangcong\n                $elem.css('z-index', zIndex);\n                $toolbarElem.append($elem);\n            }\n        });\n    },\n\n    // 绑定菜单 click mouseenter 事件\n    _bindEvent: function _bindEvent() {\n        var menus = this.menus;\n        var editor = this.editor;\n        objForEach(menus, function (key, menu) {\n            var type = menu.type;\n            if (!type) {\n                return;\n            }\n            var $elem = menu.$elem;\n            var droplist = menu.droplist;\n            var panel = menu.panel;\n\n            // 点击类型，例如 bold\n            if (type === 'click' && menu.onClick) {\n                $elem.on('click', function (e) {\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    menu.onClick(e);\n                });\n            }\n\n            // 下拉框，例如 head\n            if (type === 'droplist' && droplist) {\n                $elem.on('mouseenter', function (e) {\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    // 显示\n                    droplist.showTimeoutId = setTimeout(function () {\n                        droplist.show();\n                    }, 200);\n                }).on('mouseleave', function (e) {\n                    // 隐藏\n                    droplist.hideTimeoutId = setTimeout(function () {\n                        droplist.hide();\n                    }, 0);\n                });\n            }\n\n            // 弹框类型，例如 link\n            if (type === 'panel' && menu.onClick) {\n                $elem.on('click', function (e) {\n                    e.stopPropagation();\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    // 在自定义事件中显示 panel\n                    menu.onClick(e);\n                });\n            }\n        });\n    },\n\n    // 尝试修改菜单状态\n    changeActive: function changeActive() {\n        var menus = this.menus;\n        objForEach(menus, function (key, menu) {\n            if (menu.tryChangeActive) {\n                setTimeout(function () {\n                    menu.tryChangeActive();\n                }, 100);\n            }\n        });\n    }\n};\n\n/*\n    粘贴信息的处理\n*/\n\n// 获取粘贴的纯文本\nfunction getPasteText(e) {\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData;\n    var pasteText = void 0;\n    if (clipboardData == null) {\n        pasteText = window.clipboardData && window.clipboardData.getData('text');\n    } else {\n        pasteText = clipboardData.getData('text/plain');\n    }\n\n    return replaceHtmlSymbol(pasteText);\n}\n\n// 获取粘贴的html\nfunction getPasteHtml(e, filterStyle, ignoreImg) {\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData;\n    var pasteText = void 0,\n        pasteHtml = void 0;\n    if (clipboardData == null) {\n        pasteText = window.clipboardData && window.clipboardData.getData('text');\n    } else {\n        pasteText = clipboardData.getData('text/plain');\n        pasteHtml = clipboardData.getData('text/html');\n    }\n    if (!pasteHtml && pasteText) {\n        pasteHtml = '<p>' + replaceHtmlSymbol(pasteText) + '</p>';\n    }\n    if (!pasteHtml) {\n        return;\n    }\n\n    // 过滤word中状态过来的无用字符\n    var docSplitHtml = pasteHtml.split('</html>');\n    if (docSplitHtml.length === 2) {\n        pasteHtml = docSplitHtml[0];\n    }\n\n    // 过滤无用标签\n    pasteHtml = pasteHtml.replace(/<(meta|script|link).+?>/igm, '');\n    // 去掉注释\n    pasteHtml = pasteHtml.replace(/<!--.*?-->/mg, '');\n    // 过滤 data-xxx 属性\n    pasteHtml = pasteHtml.replace(/\\s?data-.+?=('|\").+?('|\")/igm, '');\n\n    if (ignoreImg) {\n        // 忽略图片\n        pasteHtml = pasteHtml.replace(/<img.+?>/igm, '');\n    }\n\n    if (filterStyle) {\n        // 过滤样式\n        pasteHtml = pasteHtml.replace(/\\s?(class|style)=('|\").*?('|\")/igm, '');\n    } else {\n        // 保留样式\n        pasteHtml = pasteHtml.replace(/\\s?class=('|\").*?('|\")/igm, '');\n    }\n\n    return pasteHtml;\n}\n\n// 获取粘贴的图片文件\nfunction getPasteImgs(e) {\n    var result = [];\n    var txt = getPasteText(e);\n    if (txt) {\n        // 有文字，就忽略图片\n        return result;\n    }\n\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData || {};\n    var items = clipboardData.items;\n    if (!items) {\n        return result;\n    }\n\n    objForEach(items, function (key, value) {\n        var type = value.type;\n        if (/image/i.test(type)) {\n            result.push(value.getAsFile());\n        }\n    });\n\n    return result;\n}\n\n/*\n    编辑区域\n*/\n\n// 获取一个 elem.childNodes 的 JSON 数据\nfunction getChildrenJSON($elem) {\n    var result = [];\n    var $children = $elem.childNodes() || []; // 注意 childNodes() 可以获取文本节点\n    $children.forEach(function (curElem) {\n        var elemResult = void 0;\n        var nodeType = curElem.nodeType;\n\n        // 文本节点\n        if (nodeType === 3) {\n            elemResult = curElem.textContent;\n            elemResult = replaceHtmlSymbol(elemResult);\n        }\n\n        // 普通 DOM 节点\n        if (nodeType === 1) {\n            elemResult = {};\n\n            // tag\n            elemResult.tag = curElem.nodeName.toLowerCase();\n            // attr\n            var attrData = [];\n            var attrList = curElem.attributes || {};\n            var attrListLength = attrList.length || 0;\n            for (var i = 0; i < attrListLength; i++) {\n                var attr = attrList[i];\n                attrData.push({\n                    name: attr.name,\n                    value: attr.value\n                });\n            }\n            elemResult.attrs = attrData;\n            // children（递归）\n            elemResult.children = getChildrenJSON($(curElem));\n        }\n\n        result.push(elemResult);\n    });\n    return result;\n}\n\n// 构造函数\nfunction Text(editor) {\n    this.editor = editor;\n}\n\n// 修改原型\nText.prototype = {\n    constructor: Text,\n\n    // 初始化\n    init: function init() {\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 清空内容\n    clear: function clear() {\n        this.html('<p><br></p>');\n    },\n\n    // 获取 设置 html\n    html: function html(val) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        var html = void 0;\n        if (val == null) {\n            html = $textElem.html();\n            // 未选中任何内容的时候点击“加粗”或者“斜体”等按钮，就得需要一个空的占位符 &#8203 ，这里替换掉\n            html = html.replace(/\\u200b/gm, '');\n            return html;\n        } else {\n            $textElem.html(val);\n\n            // 初始化选取，将光标定位到内容尾部\n            editor.initSelection();\n        }\n    },\n\n    // 获取 JSON\n    getJSON: function getJSON() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        return getChildrenJSON($textElem);\n    },\n\n    // 获取 设置 text\n    text: function text(val) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        var text = void 0;\n        if (val == null) {\n            text = $textElem.text();\n            // 未选中任何内容的时候点击“加粗”或者“斜体”等按钮，就得需要一个空的占位符 &#8203 ，这里替换掉\n            text = text.replace(/\\u200b/gm, '');\n            return text;\n        } else {\n            $textElem.text('<p>' + val + '</p>');\n\n            // 初始化选取，将光标定位到内容尾部\n            editor.initSelection();\n        }\n    },\n\n    // 追加内容\n    append: function append(html) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        $textElem.append($(html));\n\n        // 初始化选取，将光标定位到内容尾部\n        editor.initSelection();\n    },\n\n    // 绑定事件\n    _bindEvent: function _bindEvent() {\n        // 实时保存选取\n        this._saveRangeRealTime();\n\n        // 按回车建时的特殊处理\n        this._enterKeyHandle();\n\n        // 清空时保留 <p><br></p>\n        this._clearHandle();\n\n        // 粘贴事件（粘贴文字，粘贴图片）\n        this._pasteHandle();\n\n        // tab 特殊处理\n        this._tabHandle();\n\n        // img 点击\n        this._imgHandle();\n\n        // 拖拽事件\n        this._dragHandle();\n    },\n\n    // 实时保存选取\n    _saveRangeRealTime: function _saveRangeRealTime() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        // 保存当前的选区\n        function saveRange(e) {\n            // 随时保存选区\n            editor.selection.saveRange();\n            // 更新按钮 ative 状态\n            editor.menus.changeActive();\n        }\n        // 按键后保存\n        $textElem.on('keyup', saveRange);\n        $textElem.on('mousedown', function (e) {\n            // mousedown 状态下，鼠标滑动到编辑区域外面，也需要保存选区\n            $textElem.on('mouseleave', saveRange);\n        });\n        $textElem.on('mouseup', function (e) {\n            saveRange();\n            // 在编辑器区域之内完成点击，取消鼠标滑动到编辑区外面的事件\n            $textElem.off('mouseleave', saveRange);\n        });\n    },\n\n    // 按回车键时的特殊处理\n    _enterKeyHandle: function _enterKeyHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        function insertEmptyP($selectionElem) {\n            var $p = $('<p><br></p>');\n            $p.insertBefore($selectionElem);\n            editor.selection.createRangeByElem($p, true);\n            editor.selection.restoreSelection();\n            $selectionElem.remove();\n        }\n\n        // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n        function pHandle(e) {\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            var $parentElem = $selectionElem.parent();\n\n            if ($parentElem.html() === '<code><br></code>') {\n                // 回车之前光标所在一个 <p><code>.....</code></p> ，忽然回车生成一个空的 <p><code><br></code></p>\n                // 而且继续回车跳不出去，因此只能特殊处理\n                insertEmptyP($selectionElem);\n                return;\n            }\n\n            if (!$parentElem.equal($textElem)) {\n                // 不是顶级标签\n                return;\n            }\n\n            var nodeName = $selectionElem.getNodeName();\n            if (nodeName === 'P') {\n                // 当前的标签是 P ，不用做处理\n                return;\n            }\n\n            if ($selectionElem.text()) {\n                // 有内容，不做处理\n                return;\n            }\n\n            // 插入 <p> ，并将选取定位到 <p>，删除当前标签\n            insertEmptyP($selectionElem);\n        }\n\n        $textElem.on('keyup', function (e) {\n            if (e.keyCode !== 13) {\n                // 不是回车键\n                return;\n            }\n            // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n            pHandle(e);\n        });\n\n        // <pre><code></code></pre> 回车时 特殊处理\n        function codeHandle(e) {\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var $parentElem = $selectionElem.parent();\n            var selectionNodeName = $selectionElem.getNodeName();\n            var parentNodeName = $parentElem.getNodeName();\n\n            if (selectionNodeName !== 'CODE' || parentNodeName !== 'PRE') {\n                // 不符合要求 忽略\n                return;\n            }\n\n            if (!editor.cmd.queryCommandSupported('insertHTML')) {\n                // 必须原生支持 insertHTML 命令\n                return;\n            }\n\n            // 处理：光标定位到代码末尾，联系点击两次回车，即跳出代码块\n            if (editor._willBreakCode === true) {\n                // 此时可以跳出代码块\n                // 插入 <p> ，并将选取定位到 <p>\n                var $p = $('<p><br></p>');\n                $p.insertAfter($parentElem);\n                editor.selection.createRangeByElem($p, true);\n                editor.selection.restoreSelection();\n\n                // 修改状态\n                editor._willBreakCode = false;\n\n                e.preventDefault();\n                return;\n            }\n\n            var _startOffset = editor.selection.getRange().startOffset;\n\n            // 处理：回车时，不能插入 <br> 而是插入 \\n ，因为是在 pre 标签里面\n            editor.cmd.do('insertHTML', '\\n');\n            editor.selection.saveRange();\n            if (editor.selection.getRange().startOffset === _startOffset) {\n                // 没起作用，再来一遍\n                editor.cmd.do('insertHTML', '\\n');\n            }\n\n            var codeLength = $selectionElem.html().length;\n            if (editor.selection.getRange().startOffset + 1 === codeLength) {\n                // 说明光标在代码最后的位置，执行了回车操作\n                // 记录下来，以便下次回车时候跳出 code\n                editor._willBreakCode = true;\n            }\n\n            // 阻止默认行为\n            e.preventDefault();\n        }\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 13) {\n                // 不是回车键\n                // 取消即将跳转代码块的记录\n                editor._willBreakCode = false;\n                return;\n            }\n            // <pre><code></code></pre> 回车时 特殊处理\n            codeHandle(e);\n        });\n    },\n\n    // 清空时保留 <p><br></p>\n    _clearHandle: function _clearHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 8) {\n                return;\n            }\n            var txtHtml = $textElem.html().toLowerCase().trim();\n            if (txtHtml === '<p><br></p>') {\n                // 最后剩下一个空行，就不再删除了\n                e.preventDefault();\n                return;\n            }\n        });\n\n        $textElem.on('keyup', function (e) {\n            if (e.keyCode !== 8) {\n                return;\n            }\n            var $p = void 0;\n            var txtHtml = $textElem.html().toLowerCase().trim();\n\n            // firefox 时用 txtHtml === '<br>' 判断，其他用 !txtHtml 判断\n            if (!txtHtml || txtHtml === '<br>') {\n                // 内容空了\n                $p = $('<p><br/></p>');\n                $textElem.html(''); // 一定要先清空，否则在 firefox 下有问题\n                $textElem.append($p);\n                editor.selection.createRangeByElem($p, false, true);\n                editor.selection.restoreSelection();\n            }\n        });\n    },\n\n    // 粘贴事件（粘贴文字 粘贴图片）\n    _pasteHandle: function _pasteHandle() {\n        var editor = this.editor;\n        var config = editor.config;\n        var pasteFilterStyle = config.pasteFilterStyle;\n        var pasteTextHandle = config.pasteTextHandle;\n        var ignoreImg = config.pasteIgnoreImg;\n        var $textElem = editor.$textElem;\n\n        // 粘贴图片、文本的事件，每次只能执行一个\n        // 判断该次粘贴事件是否可以执行\n        var pasteTime = 0;\n        function canDo() {\n            var now = Date.now();\n            var flag = false;\n            if (now - pasteTime >= 100) {\n                // 间隔大于 100 ms ，可以执行\n                flag = true;\n            }\n            pasteTime = now;\n            return flag;\n        }\n        function resetTime() {\n            pasteTime = 0;\n        }\n\n        // 粘贴文字\n        $textElem.on('paste', function (e) {\n            if (UA.isIE()) {\n                return;\n            } else {\n                // 阻止默认行为，使用 execCommand 的粘贴命令\n                e.preventDefault();\n            }\n\n            // 粘贴图片和文本，只能同时使用一个\n            if (!canDo()) {\n                return;\n            }\n\n            // 获取粘贴的文字\n            var pasteHtml = getPasteHtml(e, pasteFilterStyle, ignoreImg);\n            var pasteText = getPasteText(e);\n            pasteText = pasteText.replace(/\\n/gm, '<br>');\n\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var nodeName = $selectionElem.getNodeName();\n\n            // code 中只能粘贴纯文本\n            if (nodeName === 'CODE' || nodeName === 'PRE') {\n                if (pasteTextHandle && isFunction(pasteTextHandle)) {\n                    // 用户自定义过滤处理粘贴内容\n                    pasteText = '' + (pasteTextHandle(pasteText) || '');\n                }\n                editor.cmd.do('insertHTML', '<p>' + pasteText + '</p>');\n                return;\n            }\n\n            // 先放开注释，有问题再追查 ————\n            // // 表格中忽略，可能会出现异常问题\n            // if (nodeName === 'TD' || nodeName === 'TH') {\n            //     return\n            // }\n\n            if (!pasteHtml) {\n                // 没有内容，可继续执行下面的图片粘贴\n                resetTime();\n                return;\n            }\n            try {\n                // firefox 中，获取的 pasteHtml 可能是没有 <ul> 包裹的 <li>\n                // 因此执行 insertHTML 会报错\n                if (pasteTextHandle && isFunction(pasteTextHandle)) {\n                    // 用户自定义过滤处理粘贴内容\n                    pasteHtml = '' + (pasteTextHandle(pasteHtml) || '');\n                }\n                editor.cmd.do('insertHTML', pasteHtml);\n            } catch (ex) {\n                // 此时使用 pasteText 来兼容一下\n                if (pasteTextHandle && isFunction(pasteTextHandle)) {\n                    // 用户自定义过滤处理粘贴内容\n                    pasteText = '' + (pasteTextHandle(pasteText) || '');\n                }\n                editor.cmd.do('insertHTML', '<p>' + pasteText + '</p>');\n            }\n        });\n\n        // 粘贴图片\n        $textElem.on('paste', function (e) {\n            if (UA.isIE()) {\n                return;\n            } else {\n                e.preventDefault();\n            }\n\n            // 粘贴图片和文本，只能同时使用一个\n            if (!canDo()) {\n                return;\n            }\n\n            // 获取粘贴的图片\n            var pasteFiles = getPasteImgs(e);\n            if (!pasteFiles || !pasteFiles.length) {\n                return;\n            }\n\n            // 获取当前的元素\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var nodeName = $selectionElem.getNodeName();\n\n            // code 中粘贴忽略\n            if (nodeName === 'CODE' || nodeName === 'PRE') {\n                return;\n            }\n\n            // 上传图片\n            var uploadImg = editor.uploadImg;\n            uploadImg.uploadImg(pasteFiles);\n        });\n    },\n\n    // tab 特殊处理\n    _tabHandle: function _tabHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 9) {\n                return;\n            }\n            if (!editor.cmd.queryCommandSupported('insertHTML')) {\n                // 必须原生支持 insertHTML 命令\n                return;\n            }\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var $parentElem = $selectionElem.parent();\n            var selectionNodeName = $selectionElem.getNodeName();\n            var parentNodeName = $parentElem.getNodeName();\n\n            if (selectionNodeName === 'CODE' && parentNodeName === 'PRE') {\n                // <pre><code> 里面\n                editor.cmd.do('insertHTML', '    ');\n            } else {\n                // 普通文字\n                editor.cmd.do('insertHTML', '&nbsp;&nbsp;&nbsp;&nbsp;');\n            }\n\n            e.preventDefault();\n        });\n    },\n\n    // img 点击\n    _imgHandle: function _imgHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        // 为图片增加 selected 样式\n        $textElem.on('click', 'img', function (e) {\n            var img = this;\n            var $img = $(img);\n\n            if ($img.attr('data-w-e') === '1') {\n                // 是表情图片，忽略\n                return;\n            }\n\n            // 记录当前点击过的图片\n            editor._selectedImg = $img;\n\n            // 修改选区并 restore ，防止用户此时点击退格键，会删除其他内容\n            editor.selection.createRangeByElem($img);\n            editor.selection.restoreSelection();\n        });\n\n        // 去掉图片的 selected 样式\n        $textElem.on('click  keyup', function (e) {\n            if (e.target.matches('img')) {\n                // 点击的是图片，忽略\n                return;\n            }\n            // 删除记录\n            editor._selectedImg = null;\n        });\n    },\n\n    // 拖拽事件\n    _dragHandle: function _dragHandle() {\n        var editor = this.editor;\n\n        // 禁用 document 拖拽事件\n        var $document = $(document);\n        $document.on('dragleave drop dragenter dragover', function (e) {\n            e.preventDefault();\n        });\n\n        // 添加编辑区域拖拽事件\n        var $textElem = editor.$textElem;\n        $textElem.on('drop', function (e) {\n            e.preventDefault();\n            var files = e.dataTransfer && e.dataTransfer.files;\n            if (!files || !files.length) {\n                return;\n            }\n\n            // 上传图片\n            var uploadImg = editor.uploadImg;\n            uploadImg.uploadImg(files);\n        });\n    }\n};\n\n/*\n    命令，封装 document.execCommand\n*/\n\n// 构造函数\nfunction Command(editor) {\n    this.editor = editor;\n}\n\n// 修改原型\nCommand.prototype = {\n    constructor: Command,\n\n    // 执行命令\n    do: function _do(name, value) {\n        var editor = this.editor;\n\n        // 使用 styleWithCSS\n        if (!editor._useStyleWithCSS) {\n            document.execCommand('styleWithCSS', null, true);\n            editor._useStyleWithCSS = true;\n        }\n\n        // 如果无选区，忽略\n        if (!editor.selection.getRange()) {\n            return;\n        }\n\n        // 恢复选取\n        editor.selection.restoreSelection();\n\n        // 执行\n        var _name = '_' + name;\n        if (this[_name]) {\n            // 有自定义事件\n            this[_name](value);\n        } else {\n            // 默认 command\n            this._execCommand(name, value);\n        }\n\n        // 修改菜单状态\n        editor.menus.changeActive();\n\n        // 最后，恢复选取保证光标在原来的位置闪烁\n        editor.selection.saveRange();\n        editor.selection.restoreSelection();\n\n        // 触发 onchange\n        editor.change && editor.change();\n    },\n\n    // 自定义 insertHTML 事件\n    _insertHTML: function _insertHTML(html) {\n        var editor = this.editor;\n        var range = editor.selection.getRange();\n\n        if (this.queryCommandSupported('insertHTML')) {\n            // W3C\n            this._execCommand('insertHTML', html);\n        } else if (range.insertNode) {\n            // IE\n            range.deleteContents();\n            range.insertNode($(html)[0]);\n        } else if (range.pasteHTML) {\n            // IE <= 10\n            range.pasteHTML(html);\n        }\n    },\n\n    // 插入 elem\n    _insertElem: function _insertElem($elem) {\n        var editor = this.editor;\n        var range = editor.selection.getRange();\n\n        if (range.insertNode) {\n            range.deleteContents();\n            range.insertNode($elem[0]);\n        }\n    },\n\n    // 封装 execCommand\n    _execCommand: function _execCommand(name, value) {\n        document.execCommand(name, false, value);\n    },\n\n    // 封装 document.queryCommandValue\n    queryCommandValue: function queryCommandValue(name) {\n        return document.queryCommandValue(name);\n    },\n\n    // 封装 document.queryCommandState\n    queryCommandState: function queryCommandState(name) {\n        return document.queryCommandState(name);\n    },\n\n    // 封装 document.queryCommandSupported\n    queryCommandSupported: function queryCommandSupported(name) {\n        return document.queryCommandSupported(name);\n    }\n};\n\n/*\n    selection range API\n*/\n\n// 构造函数\nfunction API(editor) {\n    this.editor = editor;\n    this._currentRange = null;\n}\n\n// 修改原型\nAPI.prototype = {\n    constructor: API,\n\n    // 获取 range 对象\n    getRange: function getRange() {\n        return this._currentRange;\n    },\n\n    // 保存选区\n    saveRange: function saveRange(_range) {\n        if (_range) {\n            // 保存已有选区\n            this._currentRange = _range;\n            return;\n        }\n\n        // 获取当前的选区\n        var selection = window.getSelection();\n        if (selection.rangeCount === 0) {\n            return;\n        }\n        var range = selection.getRangeAt(0);\n\n        // 判断选区内容是否在编辑内容之内\n        var $containerElem = this.getSelectionContainerElem(range);\n        if (!$containerElem) {\n            return;\n        }\n\n        // 判断选区内容是否在不可编辑区域之内\n        if ($containerElem.attr('contenteditable') === 'false' || $containerElem.parentUntil('[contenteditable=false]')) {\n            return;\n        }\n\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        if ($textElem.isContain($containerElem)) {\n            // 是编辑内容之内的\n            this._currentRange = range;\n        }\n    },\n\n    // 折叠选区\n    collapseRange: function collapseRange(toStart) {\n        if (toStart == null) {\n            // 默认为 false\n            toStart = false;\n        }\n        var range = this._currentRange;\n        if (range) {\n            range.collapse(toStart);\n        }\n    },\n\n    // 选中区域的文字\n    getSelectionText: function getSelectionText() {\n        var range = this._currentRange;\n        if (range) {\n            return this._currentRange.toString();\n        } else {\n            return '';\n        }\n    },\n\n    // 选区的 $Elem\n    getSelectionContainerElem: function getSelectionContainerElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.commonAncestorContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n    getSelectionStartElem: function getSelectionStartElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.startContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n    getSelectionEndElem: function getSelectionEndElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.endContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n\n    // 选区是否为空\n    isSelectionEmpty: function isSelectionEmpty() {\n        var range = this._currentRange;\n        if (range && range.startContainer) {\n            if (range.startContainer === range.endContainer) {\n                if (range.startOffset === range.endOffset) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    },\n\n    // 恢复选区\n    restoreSelection: function restoreSelection() {\n        var selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(this._currentRange);\n    },\n\n    // 创建一个空白（即 &#8203 字符）选区\n    createEmptyRange: function createEmptyRange() {\n        var editor = this.editor;\n        var range = this.getRange();\n        var $elem = void 0;\n\n        if (!range) {\n            // 当前无 range\n            return;\n        }\n        if (!this.isSelectionEmpty()) {\n            // 当前选区必须没有内容才可以\n            return;\n        }\n\n        try {\n            // 目前只支持 webkit 内核\n            if (UA.isWebkit()) {\n                // 插入 &#8203\n                editor.cmd.do('insertHTML', '&#8203;');\n                // 修改 offset 位置\n                range.setEnd(range.endContainer, range.endOffset + 1);\n                // 存储\n                this.saveRange(range);\n            } else {\n                $elem = $('<strong>&#8203;</strong>');\n                editor.cmd.do('insertElem', $elem);\n                this.createRangeByElem($elem, true);\n            }\n        } catch (ex) {\n            // 部分情况下会报错，兼容一下\n        }\n    },\n\n    // 根据 $Elem 设置选区\n    createRangeByElem: function createRangeByElem($elem, toStart, isContent) {\n        // $elem - 经过封装的 elem\n        // toStart - true 开始位置，false 结束位置\n        // isContent - 是否选中Elem的内容\n        if (!$elem.length) {\n            return;\n        }\n\n        var elem = $elem[0];\n        var range = document.createRange();\n\n        if (isContent) {\n            range.selectNodeContents(elem);\n        } else {\n            range.selectNode(elem);\n        }\n\n        if (typeof toStart === 'boolean') {\n            range.collapse(toStart);\n        }\n\n        // 存储 range\n        this.saveRange(range);\n    }\n};\n\n/*\n    上传进度条\n*/\n\nfunction Progress(editor) {\n    this.editor = editor;\n    this._time = 0;\n    this._isShow = false;\n    this._isRender = false;\n    this._timeoutId = 0;\n    this.$textContainer = editor.$textContainerElem;\n    this.$bar = $('<div class=\"w-e-progress\"></div>');\n}\n\nProgress.prototype = {\n    constructor: Progress,\n\n    show: function show(progress) {\n        var _this = this;\n\n        // 状态处理\n        if (this._isShow) {\n            return;\n        }\n        this._isShow = true;\n\n        // 渲染\n        var $bar = this.$bar;\n        if (!this._isRender) {\n            var $textContainer = this.$textContainer;\n            $textContainer.append($bar);\n        } else {\n            this._isRender = true;\n        }\n\n        // 改变进度（节流，100ms 渲染一次）\n        if (Date.now() - this._time > 100) {\n            if (progress <= 1) {\n                $bar.css('width', progress * 100 + '%');\n                this._time = Date.now();\n            }\n        }\n\n        // 隐藏\n        var timeoutId = this._timeoutId;\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        timeoutId = setTimeout(function () {\n            _this._hide();\n        }, 500);\n    },\n\n    _hide: function _hide() {\n        var $bar = this.$bar;\n        $bar.remove();\n\n        // 修改状态\n        this._time = 0;\n        this._isShow = false;\n        this._isRender = false;\n    }\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n/*\n    上传图片\n*/\n\n// 构造函数\nfunction UploadImg(editor) {\n    this.editor = editor;\n}\n\n// 原型\nUploadImg.prototype = {\n    constructor: UploadImg,\n\n    // 根据 debug 弹出不同的信息\n    _alert: function _alert(alertInfo, debugInfo) {\n        var editor = this.editor;\n        var debug = editor.config.debug;\n        var customAlert = editor.config.customAlert;\n\n        if (debug) {\n            throw new Error('wangEditor: ' + (debugInfo || alertInfo));\n        } else {\n            if (customAlert && typeof customAlert === 'function') {\n                customAlert(alertInfo);\n            } else {\n                alert(alertInfo);\n            }\n        }\n    },\n\n    // 根据链接插入图片\n    insertLinkImg: function insertLinkImg(link) {\n        var _this2 = this;\n\n        if (!link) {\n            return;\n        }\n        var editor = this.editor;\n        var config = editor.config;\n\n        // 校验格式\n        var linkImgCheck = config.linkImgCheck;\n        var checkResult = void 0;\n        if (linkImgCheck && typeof linkImgCheck === 'function') {\n            checkResult = linkImgCheck(link);\n            if (typeof checkResult === 'string') {\n                // 校验失败，提示信息\n                alert(checkResult);\n                return;\n            }\n        }\n\n        editor.cmd.do('insertHTML', '<img src=\"' + link + '\" style=\"max-width:100%;\"/><br /><br />');\n\n        // 验证图片 url 是否有效，无效的话给出提示\n        var img = document.createElement('img');\n        img.onload = function () {\n            var callback = config.linkImgCallback;\n            if (callback && typeof callback === 'function') {\n                callback(link);\n            }\n\n            img = null;\n        };\n        img.onerror = function () {\n            img = null;\n            // 无法成功下载图片\n            _this2._alert('插入图片错误', 'wangEditor: \\u63D2\\u5165\\u56FE\\u7247\\u51FA\\u9519\\uFF0C\\u56FE\\u7247\\u94FE\\u63A5\\u662F \"' + link + '\"\\uFF0C\\u4E0B\\u8F7D\\u8BE5\\u94FE\\u63A5\\u5931\\u8D25');\n            return;\n        };\n        img.onabort = function () {\n            img = null;\n        };\n        img.src = link;\n    },\n\n    // 上传图片\n    uploadImg: function uploadImg(files) {\n        var _this3 = this;\n\n        if (!files || !files.length) {\n            return;\n        }\n\n        // ------------------------------ 获取配置信息 ------------------------------\n        var editor = this.editor;\n        var config = editor.config;\n        var uploadImgServer = config.uploadImgServer;\n        var uploadImgShowBase64 = config.uploadImgShowBase64;\n\n        var maxSize = config.uploadImgMaxSize;\n        var maxSizeM = maxSize / 1024 / 1024;\n        var maxLength = config.uploadImgMaxLength || 10000;\n        var uploadFileName = config.uploadFileName || '';\n        var uploadImgParams = config.uploadImgParams || {};\n        var uploadImgParamsWithUrl = config.uploadImgParamsWithUrl;\n        var uploadImgHeaders = config.uploadImgHeaders || {};\n        var hooks = config.uploadImgHooks || {};\n        var timeout = config.uploadImgTimeout || 3000;\n        var withCredentials = config.withCredentials;\n        if (withCredentials == null) {\n            withCredentials = false;\n        }\n        var customUploadImg = config.customUploadImg;\n\n        if (!customUploadImg) {\n            // 没有 customUploadImg 的情况下，需要如下两个配置才能继续进行图片上传\n            if (!uploadImgServer && !uploadImgShowBase64) {\n                return;\n            }\n        }\n\n        // ------------------------------ 验证文件信息 ------------------------------\n        var resultFiles = [];\n        var errInfo = [];\n        arrForEach(files, function (file) {\n            var name = file.name;\n            var size = file.size;\n\n            // chrome 低版本 name === undefined\n            if (!name || !size) {\n                return;\n            }\n\n            if (/\\.(jpg|jpeg|png|bmp|gif|webp)$/i.test(name) === false) {\n                // 后缀名不合法，不是图片\n                errInfo.push('\\u3010' + name + '\\u3011\\u4E0D\\u662F\\u56FE\\u7247');\n                return;\n            }\n            if (maxSize < size) {\n                // 上传图片过大\n                //请上传小于5M的图片\n                //`【${name}】大于 ${maxSizeM}M`\n                //\n                errInfo.push('\\u8BF7\\u4E0A\\u4F20\\u5C0F\\u4E8E' + maxSizeM + 'M\\u7684\\u56FE\\u7247');\n                return;\n            }\n\n            // 验证通过的加入结果列表\n            resultFiles.push(file);\n        });\n        // 抛出验证信息\n        if (errInfo.length) {\n            //this._alert('图片验证未通过: \\n' + errInfo.join('\\n'))\n            this._alert(errInfo.join('\\n'));\n            return;\n        }\n        if (resultFiles.length > maxLength) {\n            this._alert('一次最多上传' + maxLength + '张图片');\n            return;\n        }\n\n        // ------------------------------ 自定义上传 ------------------------------\n        if (customUploadImg && typeof customUploadImg === 'function') {\n            customUploadImg(resultFiles, this.insertLinkImg.bind(this));\n\n            // 阻止以下代码执行\n            return;\n        }\n\n        // 添加图片数据\n        var formdata = new FormData();\n        arrForEach(resultFiles, function (file) {\n            var name = uploadFileName || file.name;\n            formdata.append(name, file);\n        });\n\n        // ------------------------------ 上传图片 ------------------------------\n        if (uploadImgServer && typeof uploadImgServer === 'string') {\n            // 添加参数\n            var uploadImgServerArr = uploadImgServer.split('#');\n            uploadImgServer = uploadImgServerArr[0];\n            var uploadImgServerHash = uploadImgServerArr[1] || '';\n            objForEach(uploadImgParams, function (key, val) {\n                // 因使用者反应，自定义参数不能默认 encode ，由 v3.1.1 版本开始注释掉\n                // val = encodeURIComponent(val)\n\n                // 第一，将参数拼接到 url 中\n                if (uploadImgParamsWithUrl) {\n                    if (uploadImgServer.indexOf('?') > 0) {\n                        uploadImgServer += '&';\n                    } else {\n                        uploadImgServer += '?';\n                    }\n                    uploadImgServer = uploadImgServer + key + '=' + val;\n                }\n\n                // 第二，将参数添加到 formdata 中\n                formdata.append(key, val);\n            });\n            if (uploadImgServerHash) {\n                uploadImgServer += '#' + uploadImgServerHash;\n            }\n\n            // 定义 xhr\n            var xhr = new XMLHttpRequest();\n            xhr.open('POST', uploadImgServer);\n\n            // 设置超时\n            xhr.timeout = timeout;\n            xhr.ontimeout = function () {\n                // hook - timeout\n                if (hooks.timeout && typeof hooks.timeout === 'function') {\n                    hooks.timeout(xhr, editor);\n                }\n\n                _this3._alert('上传图片超时');\n            };\n\n            // 监控 progress\n            if (xhr.upload) {\n                xhr.upload.onprogress = function (e) {\n                    var percent = void 0;\n                    // 进度条\n                    var progressBar = new Progress(editor);\n                    if (e.lengthComputable) {\n                        percent = e.loaded / e.total;\n                        progressBar.show(percent);\n                    }\n                };\n            }\n\n            // 返回数据\n            xhr.onreadystatechange = function () {\n                var result = void 0;\n                if (xhr.readyState === 4) {\n                    if (xhr.status < 200 || xhr.status >= 300) {\n                        // hook - error\n                        if (hooks.error && typeof hooks.error === 'function') {\n                            hooks.error(xhr, editor);\n                        }\n\n                        // xhr 返回状态错误\n                        _this3._alert('上传图片发生错误', '\\u4E0A\\u4F20\\u56FE\\u7247\\u53D1\\u751F\\u9519\\u8BEF\\uFF0C\\u670D\\u52A1\\u5668\\u8FD4\\u56DE\\u72B6\\u6001\\u662F ' + xhr.status);\n                        return;\n                    }\n\n                    result = xhr.responseText;\n                    if ((typeof result === 'undefined' ? 'undefined' : _typeof(result)) !== 'object') {\n                        try {\n                            result = JSON.parse(result);\n                        } catch (ex) {\n                            // hook - fail\n                            if (hooks.fail && typeof hooks.fail === 'function') {\n                                hooks.fail(xhr, editor, result);\n                            }\n\n                            _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果是: ' + result);\n                            return;\n                        }\n                    }\n                    if (!hooks.customInsert && result.errno != '0') {\n                        // hook - fail\n                        if (hooks.fail && typeof hooks.fail === 'function') {\n                            hooks.fail(xhr, editor, result);\n                        }\n\n                        // 数据错误\n                        _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果 errno=' + result.errno);\n                    } else {\n                        if (hooks.customInsert && typeof hooks.customInsert === 'function') {\n                            // 使用者自定义插入方法\n                            hooks.customInsert(_this3.insertLinkImg.bind(_this3), result, editor);\n                        } else {\n                            // 将图片插入编辑器\n                            var data = result.data || [];\n                            data.forEach(function (link) {\n                                _this3.insertLinkImg(link);\n                            });\n                        }\n\n                        // hook - success\n                        if (hooks.success && typeof hooks.success === 'function') {\n                            hooks.success(xhr, editor, result);\n                        }\n                    }\n                }\n            };\n\n            // hook - before\n            if (hooks.before && typeof hooks.before === 'function') {\n                var beforeResult = hooks.before(xhr, editor, resultFiles);\n                if (beforeResult && (typeof beforeResult === 'undefined' ? 'undefined' : _typeof(beforeResult)) === 'object') {\n                    if (beforeResult.prevent) {\n                        // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传\n                        this._alert(beforeResult.msg);\n                        return;\n                    }\n                }\n            }\n\n            // 自定义 headers\n            objForEach(uploadImgHeaders, function (key, val) {\n                xhr.setRequestHeader(key, val);\n            });\n\n            // 跨域传 cookie\n            xhr.withCredentials = withCredentials;\n\n            // 发送请求\n            xhr.send(formdata);\n\n            // 注意，要 return 。不去操作接下来的 base64 显示方式\n            return;\n        }\n\n        // ------------------------------ 显示 base64 格式 ------------------------------\n        if (uploadImgShowBase64) {\n            arrForEach(files, function (file) {\n                var _this = _this3;\n                var reader = new FileReader();\n                reader.readAsDataURL(file);\n                reader.onload = function () {\n                    _this.insertLinkImg(this.result);\n                };\n            });\n        }\n    }\n};\n\n/*\n    编辑器构造函数\n*/\n\n// id，累加\nvar editorId = 1;\n\n// 构造函数\nfunction Editor(toolbarSelector, textSelector) {\n    if (toolbarSelector == null) {\n        // 没有传入任何参数，报错\n        throw new Error('错误：初始化编辑器时候未传入任何参数，请查阅文档');\n    }\n    // id，用以区分单个页面不同的编辑器对象\n    this.id = 'wangEditor-' + editorId++;\n\n    this.toolbarSelector = toolbarSelector;\n    this.textSelector = textSelector;\n\n    // 自定义配置\n    this.customConfig = {};\n}\n\n// 修改原型\nEditor.prototype = {\n    constructor: Editor,\n\n    // 初始化配置\n    _initConfig: function _initConfig() {\n        // _config 是默认配置，this.customConfig 是用户自定义配置，将它们 merge 之后再赋值\n        var target = {};\n        this.config = Object.assign(target, config, this.customConfig);\n\n        // 将语言配置，生成正则表达式\n        var langConfig = this.config.lang || {};\n        var langArgs = [];\n        objForEach(langConfig, function (key, val) {\n            // key 即需要生成正则表达式的规则，如“插入链接”\n            // val 即需要被替换成的语言，如“insert link”\n            langArgs.push({\n                reg: new RegExp(key, 'img'),\n                val: val\n\n            });\n        });\n        this.config.langArgs = langArgs;\n    },\n\n    // 初始化 DOM\n    _initDom: function _initDom() {\n        var _this = this;\n\n        var toolbarSelector = this.toolbarSelector;\n        var $toolbarSelector = $(toolbarSelector);\n        var textSelector = this.textSelector;\n\n        var config$$1 = this.config;\n        var zIndex = config$$1.zIndex;\n\n        // 定义变量\n        var $toolbarElem = void 0,\n            $textContainerElem = void 0,\n            $textElem = void 0,\n            $children = void 0;\n\n        if (textSelector == null) {\n            // 只传入一个参数，即是容器的选择器或元素，toolbar 和 text 的元素自行创建\n            $toolbarElem = $('<div></div>');\n            $textContainerElem = $('<div></div>');\n\n            // 将编辑器区域原有的内容，暂存起来\n            $children = $toolbarSelector.children();\n\n            // 添加到 DOM 结构中\n            $toolbarSelector.append($toolbarElem).append($textContainerElem);\n\n            // 自行创建的，需要配置默认的样式\n            $toolbarElem.css('background-color', '#f1f1f1').css('border', '1px solid #ccc');\n            $textContainerElem.css('border', '1px solid #ccc').css('border-top', 'none').css('height', '300px');\n        } else {\n            // toolbar 和 text 的选择器都有值，记录属性\n            $toolbarElem = $toolbarSelector;\n            $textContainerElem = $(textSelector);\n            // 将编辑器区域原有的内容，暂存起来\n            $children = $textContainerElem.children();\n        }\n\n        // 编辑区域\n        $textElem = $('<div></div>');\n        $textElem.attr('contenteditable', 'true').css('width', '100%').css('height', '100%');\n\n        // 初始化编辑区域内容\n        if ($children && $children.length) {\n            $textElem.append($children);\n        } else {\n            $textElem.append($('<p><br></p>'));\n        }\n\n        // 编辑区域加入DOM\n        $textContainerElem.append($textElem);\n\n        // 设置通用的 class\n        $toolbarElem.addClass('w-e-toolbar');\n        $textContainerElem.addClass('w-e-text-container');\n        $textContainerElem.css('z-index', zIndex);\n        $textElem.addClass('w-e-text');\n\n        // 添加 ID\n        var toolbarElemId = getRandom('toolbar-elem');\n        $toolbarElem.attr('id', toolbarElemId);\n        var textElemId = getRandom('text-elem');\n        $textElem.attr('id', textElemId);\n\n        // 记录属性\n        this.$toolbarElem = $toolbarElem;\n        this.$textContainerElem = $textContainerElem;\n        this.$textElem = $textElem;\n        this.toolbarElemId = toolbarElemId;\n        this.textElemId = textElemId;\n\n        // 记录输入法的开始和结束\n        var compositionEnd = true;\n        $textContainerElem.on('compositionstart', function () {\n            // 输入法开始输入\n            compositionEnd = false;\n        });\n        $textContainerElem.on('compositionend', function () {\n            // 输入法结束输入\n            compositionEnd = true;\n        });\n\n        // 绑定 onchange\n        $textContainerElem.on('click keyup', function () {\n            // 输入法结束才出发 onchange\n            compositionEnd && _this.change && _this.change();\n        });\n        $toolbarElem.on('click', function () {\n            this.change && this.change();\n        });\n\n        //绑定 onfocus 与 onblur 事件\n        if (config$$1.onfocus || config$$1.onblur) {\n            // 当前编辑器是否是焦点状态\n            this.isFocus = false;\n\n            $(document).on('click', function (e) {\n                //判断当前点击元素是否在编辑器内\n                var isChild = $textElem.isContain($(e.target));\n\n                //判断当前点击元素是否为工具栏\n                var isToolbar = $toolbarElem.isContain($(e.target));\n                var isMenu = $toolbarElem[0] == e.target ? true : false;\n\n                if (!isChild) {\n                    //若为选择工具栏中的功能，则不视为成blur操作\n                    if (isToolbar && !isMenu) {\n                        return;\n                    }\n\n                    if (_this.isFocus) {\n                        _this.onblur && _this.onblur();\n                    }\n                    _this.isFocus = false;\n                } else {\n                    if (!_this.isFocus) {\n                        _this.onfocus && _this.onfocus();\n                    }\n                    _this.isFocus = true;\n                }\n            });\n        }\n    },\n\n    // 封装 command\n    _initCommand: function _initCommand() {\n        this.cmd = new Command(this);\n    },\n\n    // 封装 selection range API\n    _initSelectionAPI: function _initSelectionAPI() {\n        this.selection = new API(this);\n    },\n\n    // 添加图片上传\n    _initUploadImg: function _initUploadImg() {\n        this.uploadImg = new UploadImg(this);\n    },\n\n    // 初始化菜单\n    _initMenus: function _initMenus() {\n        this.menus = new Menus(this);\n        this.menus.init();\n    },\n\n    // 添加 text 区域\n    _initText: function _initText() {\n        this.txt = new Text(this);\n        this.txt.init();\n    },\n\n    // 初始化选区，将光标定位到内容尾部\n    initSelection: function initSelection(newLine) {\n        var $textElem = this.$textElem;\n        var $children = $textElem.children();\n        if (!$children.length) {\n            // 如果编辑器区域无内容，添加一个空行，重新设置选区\n            $textElem.append($('<p><br></p>'));\n            this.initSelection();\n            return;\n        }\n\n        var $last = $children.last();\n\n        if (newLine) {\n            // 新增一个空行\n            var html = $last.html().toLowerCase();\n            var nodeName = $last.getNodeName();\n            if (html !== '<br>' && html !== '<br\\/>' || nodeName !== 'P') {\n                // 最后一个元素不是 <p><br></p>，添加一个空行，重新设置选区\n                $textElem.append($('<p><br></p>'));\n                this.initSelection();\n                return;\n            }\n        }\n\n        this.selection.createRangeByElem($last, false, true);\n        this.selection.restoreSelection();\n    },\n\n    // 绑定事件\n    _bindEvent: function _bindEvent() {\n        // -------- 绑定 onchange 事件 --------\n        var onChangeTimeoutId = 0;\n        var beforeChangeHtml = this.txt.html();\n        var config$$1 = this.config;\n\n        // onchange 触发延迟时间\n        var onchangeTimeout = config$$1.onchangeTimeout;\n        onchangeTimeout = parseInt(onchangeTimeout, 10);\n        if (!onchangeTimeout || onchangeTimeout <= 0) {\n            onchangeTimeout = 200;\n        }\n\n        var onchange = config$$1.onchange;\n        if (onchange && typeof onchange === 'function') {\n            // 触发 change 的有三个场景：\n            // 1. $textContainerElem.on('click keyup')\n            // 2. $toolbarElem.on('click')\n            // 3. editor.cmd.do()\n            this.change = function () {\n                // 判断是否有变化\n                var currentHtml = this.txt.html();\n\n                if (currentHtml.length === beforeChangeHtml.length) {\n                    // 需要比较每一个字符\n                    if (currentHtml === beforeChangeHtml) {\n                        return;\n                    }\n                }\n\n                // 执行，使用节流\n                if (onChangeTimeoutId) {\n                    clearTimeout(onChangeTimeoutId);\n                }\n                onChangeTimeoutId = setTimeout(function () {\n                    // 触发配置的 onchange 函数\n                    onchange(currentHtml);\n                    beforeChangeHtml = currentHtml;\n                }, onchangeTimeout);\n            };\n        }\n\n        // -------- 绑定 onblur 事件 --------\n        var onblur = config$$1.onblur;\n        if (onblur && typeof onblur === 'function') {\n            this.onblur = function () {\n                var currentHtml = this.txt.html();\n                onblur(currentHtml);\n            };\n        }\n\n        // -------- 绑定 onfocus 事件 --------\n        var onfocus = config$$1.onfocus;\n        if (onfocus && typeof onfocus === 'function') {\n            this.onfocus = function () {\n                onfocus();\n            };\n        }\n    },\n\n    // 创建编辑器\n    create: function create() {\n        // 初始化配置信息\n        this._initConfig();\n\n        // 初始化 DOM\n        this._initDom();\n\n        // 封装 command API\n        this._initCommand();\n\n        // 封装 selection range API\n        this._initSelectionAPI();\n\n        // 添加 text\n        this._initText();\n\n        // 初始化菜单\n        this._initMenus();\n\n        // 添加 图片上传\n        this._initUploadImg();\n\n        // 初始化选区，将光标定位到内容尾部\n        this.initSelection(true);\n\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 解绑所有事件（暂时不对外开放）\n    _offAllEvent: function _offAllEvent() {\n        $.offAll();\n    }\n};\n\n// 检验是否浏览器环境\ntry {\n    document;\n} catch (ex) {\n    throw new Error('请在浏览器环境下运行');\n}\n\n// polyfill\npolyfill();\n\n// 这里的 `inlinecss` 将被替换成 css 代码的内容，详情可去 ./gulpfile.js 中搜索 `inlinecss` 关键字\nvar inlinecss = '.w-e-toolbar,.w-e-text-container,.w-e-menu-panel {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-toolbar *,.w-e-text-container *,.w-e-menu-panel * {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-clear-fix:after {  content: \"\";  display: table;  clear: both;}/* 自定义icon */@font-face {  font-family: \\'icomoon\\';  src: url(\\'fonts/icomoon.woff?x9302e\\') format(\\'truetype\\');  font-weight: normal;  font-style: normal;  font-display: block;}[class^=\"custom-icon-\"],[class*=\" custom-icon-\"] {  /* use !important to prevent issues with browser extensions that change fonts */  font-family: \\'icomoon\\' !important;  speak: never;  font-style: normal;  font-weight: normal;  font-variant: normal;  text-transform: none;  /* Better Font Rendering =========== */  -webkit-font-smoothing: antialiased;  -moz-osx-font-smoothing: grayscale;}.custom-icon-copy:before {  content: \"\\\\e92c\";}.custom-icon-link:before {  content: \"\\\\e9cb\";}.custom-icon-file-openoffice:before {  content: \"\\\\eae0\";}/* content icon颜色 #F9292B 字颜色#2D2D33 背景#F2F4F9 内边框#D6DAE5*/.custom-copy {  margin-bottom: 1px;  height: 35px;  line-height: 35px;  font-size: 12px;  background: #F2F4F9;  border: 2px dashed #D6DAE5;  border-radius: 5px;  width: 100%;  text-align: center;}.custom-copy .custom-app-text {  color: #2D2D33;}.custom-copy .custom-icon-copy {  color: #F9292B;}.custom-copy .custom-copy-title {  color: #F9292B;}.custom-app {  margin-bottom: 1px;  height: 35px;  line-height: 35px;  font-size: 12px;  background: #F2F4F9;  border: 2px dashed #D6DAE5;  border-radius: 5px;  width: 100%;  text-align: center;}.custom-app .custom-app-text {  color: #2D2D33;}.custom-app .custom-icon-link {  color: #F9292B;}.custom-app .custom-icon-file-openoffice {  color: #F9292B;}.custom-app .custom-app-title {  color: #F9292B;}.custom-open {  margin-bottom: 1px;  height: 35px;  line-height: 35px;  font-size: 12px;  background: #F2F4F9;  border: 2px dashed #D6DAE5;  border-radius: 5px;  width: 100%;  text-align: center;}.custom-open .custom-open-text {  color: #2D2D33;}.custom-open .custom-icon-link {  color: #1995FB;}.custom-open .custom-icon-file-openoffice {  color: #F9292B;}.custom-open .custom-open-title {  color: #1995FB;}/*王百万自定义内容*/.copyWapper {  text-align: center;}.copyText {  padding-right: 20px;  padding-left: 20px;  display: inline-block;  *display: inline;  *zoom: 1;  height: 33px;  line-height: 33px;  border-radius: 20px;  font-size: 15px;  text-align: center;  background: #00B2FF;  color: #ffffff;  margin: 0 auto;}/*打开外部浏览器*/.openWebSiteWapper {  width: 92%;  height: 90px;  background: linear-gradient(30deg, #DCF4FF 0%, #EDF9FF 100%);  border-radius: 10px;  margin: 0 auto;}.openWebSiteLeft {  width: 0;}.openWebSiteLeftTitle {  line-height: 21px;  box-sizing: border-box;  padding-top: 14px;  padding-left: 14px;  color: #2D2D33;  font-size: 15px;  font-weight: bold;}.openWebSiteLeftLink {  height: 36px;  line-height: 26px;  box-sizing: border-box;  padding-left: 14px;  color: #94969F;}.openWebSiteRight {  width: 90px;  -ms-flex-line-pack: center;      align-content: center;  height: 90px;  -ms-flex: 0 90px;      flex: 0 90px;}.openWebSiteIcon {  height: 62px;  width: 62px;  /*background-image: url(\\'https://imgs.wbwan.vip/wangluo.png\\');*/  background-size: 100% 100%;}/*站内跳转*/.openAppPageWapper {  width: 92%;  height: 90px;  background: #F2F4F7;  border-radius: 10px;  margin: 0 auto;}.openAppPageLeft {  width: 90px;  -ms-flex-line-pack: center;      align-content: center;  height: 90px;  -ms-flex: 0 90px;      flex: 0 90px;}.openAppPageIcon {  height: 62px;  width: 62px;  /*background-image: url(\\'https://imgs.wbwan.vip/zhanneiwenzhang.png\\');*/  background-size: 100% 100%;}.openAppPageIcon.task {  /*background-image: url(\\'https://imgs.wbwan.vip/renwuxuanshang.png\\');*/}.openAppPageMiddle {  width: 0;  -ms-flex-line-pack: center;      align-content: center;  line-height: 24px;  height: 59px;  font-size: 15px;  font-weight: bold;  color: #2D2D33;  box-sizing: border-box;  padding-top: 20px;}.openAppPageRight {  width: 50px;}.openAppPageRight i {  color: #94969F;}.w-e-toolbar .w-e-droplist {  position: absolute;  left: 0;  top: 0;  background-color: #fff;  border: 1px solid #f1f1f1;  border-right-color: #ccc;  border-bottom-color: #ccc;}.w-e-toolbar .w-e-droplist .w-e-dp-title {  text-align: center;  color: #999;  line-height: 2;  border-bottom: 1px solid #f1f1f1;  font-size: 13px;}.w-e-toolbar .w-e-droplist ul.w-e-list {  list-style: none;  line-height: 1;}.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item {  color: #333;  padding: 5px 0;}.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item:hover {  background-color: #f1f1f1;}.w-e-toolbar .w-e-droplist ul.w-e-block {  list-style: none;  text-align: left;  padding: 5px;}.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item {  display: inline-block;  *display: inline;  *zoom: 1;  padding: 3px 5px;}.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item:hover {  background-color: #f1f1f1;}/*  定义容器的display属性*/.bbox {  /* 老版本语法: Safari, iOS, Android browser, older WebKit browsers. */  /* 老版本语法: Firefox (buggy) */  display: -ms-flexbox;  /* 混合版本语法: IE 10 */  /* 新版本语法: Chrome 21+ */  display: -moz-flex;  display: flex;  /* 新版本语法: Opera 12.1, Firefox 22+ */}/*   主轴对齐方式*//*容器主轴居中对齐*/.bbox.xcenter {  /*Firefox*/  /*Safari,Opera,Chrome*/  box-pack: center;  -moz-justify-content: center;  -ms-flex-pack: center;      justify-content: center;}/*容器主轴左对齐（默认）*/.bbox.xleft {  /*Firefox*/  /*Safari,Opera,Chrome*/  box-pack: start;  -moz-justify-content: flex-start;  -ms-flex-pack: start;      justify-content: flex-start;}/*容器主轴右对齐*/.bbox.xright {  /*Firefox*/  /*Safari,Opera,Chrome*/  box-pack: end;  -moz-justify-content: flex-end;  -ms-flex-pack: end;      justify-content: flex-end;}/*容器主轴两端对齐*/.bbox.xbetween {  /*Firefox*/  /*Safari,Opera,Chrome*/  box-pack: justify;  -moz-justify-content: space-between;  -ms-flex-pack: justify;      justify-content: space-between;}/*容器主轴平均分布*/.bbox.xaround {  -moz-justify-content: space-around;  -ms-flex-pack: distribute;      justify-content: space-around;}/* 交叉轴对齐方式*//*顶部对齐*/.bbox.ytop {  /*Firefox*/  /*Safari,Opera,Chrome*/  box-align: start;  -moz-align-items: flex-start;  -ms-flex-align: start;      align-items: flex-start;}/*底部对齐*/.bbox.ybottom {  /*Firefox*/  /*Safari,Opera,Chrome*/  box-align: end;  -moz-align-items: flex-end;  -ms-flex-align: end;      align-items: flex-end;}/*居中对齐*/.bbox.ycenter {  /*Firefox*/  /*Safari,Opera,Chrome*/  box-align: center;  -moz-align-items: center;  -ms-flex-align: center;      align-items: center;}/*元素位于容器的基线上。如弹性盒子元素的行内轴与侧轴为同一条，则该值与\\'flex-start\\'等效。其它情况下，该值将参与基线对齐。*/.bbox.ybaseline {  /*Firefox*/  /*Safari,Opera,Chrome*/  box-align: baseline;  -moz-align-items: baseline;  -ms-flex-align: baseline;      align-items: baseline;}.bbox.ystretch {  /*Firefox*/  /*Safari,Opera,Chrome*/  box-align: stretch;  -moz-align-items: stretch;  -ms-flex-align: stretch;      align-items: stretch;}/**水平垂直居中*/.bbox.xycenter {  /*Firefox*/  /*Safari,Opera,Chrome*/  box-pack: center;  -moz-justify-content: center;  -ms-flex-pack: center;      justify-content: center;  /*Firefox*/  /*Safari,Opera,Chrome*/  box-align: center;  -moz-align-items: center;  -ms-flex-align: center;      align-items: center;}/* *子元素显示方向*/.bbox.lr {  /*Firefox*/  /*Safari,Opera,Chrome*/  box-orient: vertical;  box-direction: normal;  -moz-flex-direction: row;  -ms-flex-direction: row;      flex-direction: row;}.bbox.rl {  /*Firefox*/  /*Safari,Opera,Chrome*/  box-orient: vertical;  box-direction: reverse;  -moz-flex-direction: row-reverse;  -ms-flex-direction: row-reverse;      flex-direction: row-reverse;}.bbox.tb {  /*Firefox*/  /*Safari,Opera,Chrome*/  box-direction: normal;  /*Firefox*/  /*Safari,Opera,Chrome*/  box-orient: horizontal;  -moz-flex-direction: column;  -ms-flex-direction: column;      flex-direction: column;}.bbox.bt {  /*Firefox*/  /*Safari,Opera,Chrome*/  box-direction: reverse;  /*Firefox*/  /*Safari,Opera,Chrome*/  box-orient: horizontal;  -moz-flex-direction: column-reverse;  -ms-flex-direction: column-reverse;      flex-direction: column-reverse;}/** 换行*/.bbox.nowrap {  -moz-box-lines: single;  /*Firefox*/  -webkit-box-lines: single;  /*Safari,Opera,Chrome*/  box-lines: single;  -ms-flex-wrap: nowrap;      flex-wrap: nowrap;}.bbox.wrap {  -moz-box-lines: multiple;  /*Firefox*/  -webkit-box-lines: multiple;  /*Safari,Opera,Chrome*/  box-lines: multiple;  -ms-flex-wrap: wrap;      flex-wrap: wrap;}.bbox.wrap-reverse {  -ms-flex-wrap: wrap-reverse;      flex-wrap: wrap-reverse;}/**多主轴对齐https://www.runoob.com/cssref/css3-pr-align-content.html*/.bbox.ytop-m {  -ms-flex-line-pack: start;      align-content: flex-start;}.bbox.ycenter-m {  -ms-flex-line-pack: center;      align-content: center;}.bbox.ybottom-m {  -ms-flex-line-pack: end;      align-content: flex-end;}.bbox.ybetween-m {  -ms-flex-line-pack: justify;      align-content: space-between;}.bbox.yaround-m {  -ms-flex-line-pack: distribute;      align-content: space-around;}.bbox.ystretch-m {  -ms-flex-line-pack: stretch;      align-content: stretch;}/****子元素属性**/.bbox .fauto {  /* OLD - iOS 6-, Safari 3.1-6 */  /* OLD - Firefox 19- */  /* Chrome */  -ms-flex: auto ;  /* IE 10 */  flex: auto;  /* NEW, Spec - Opera 12.1, Firefox 20+ */}.bbox .fnone {  /* OLD - iOS 6-, Safari 3.1-6 */  /* OLD - Firefox 19- */  /* Chrome */  -ms-flex: none ;  /* IE 10 */  flex: none;  /* NEW, Spec - Opera 12.1, Firefox 20+ */}.bbox .f0 {  /* OLD - iOS 6-, Safari 3.1-6 */  /* OLD - Firefox 19- */  /* Chrome */  -ms-flex: 0 ;  /* IE 10 */  flex: 0;  /* NEW, Spec - Opera 12.1, Firefox 20+ */}.bbox .f1 {  /* OLD - iOS 6-, Safari 3.1-6 */  /* OLD - Firefox 19- */  /* Chrome */  -ms-flex: 1 ;  /* IE 10 */  flex: 1;  /* NEW, Spec - Opera 12.1, Firefox 20+ */}.bbox .f2 {  /* OLD - iOS 6-, Safari 3.1-6 */  /* OLD - Firefox 19- */  /* Chrome */  -ms-flex: 2 ;  /* IE 10 */  flex: 2;  /* NEW, Spec - Opera 12.1, Firefox 20+ */}.bbox .f3 {  /* OLD - iOS 6-, Safari 3.1-6 */  /* OLD - Firefox 19- */  /* Chrome */  -ms-flex: 3 ;  /* IE 10 */  flex: 3;  /* NEW, Spec - Opera 12.1, Firefox 20+ */}.bbox .f4 {  /* OLD - iOS 6-, Safari 3.1-6 */  /* OLD - Firefox 19- */  /* Chrome */  -ms-flex: 4 ;  /* IE 10 */  flex: 4;  /* NEW, Spec - Opera 12.1, Firefox 20+ */}.bbox .f5 {  /* OLD - iOS 6-, Safari 3.1-6 */  /* OLD - Firefox 19- */  /* Chrome */  -ms-flex: 5 ;  /* IE 10 */  flex: 5;  /* NEW, Spec - Opera 12.1, Firefox 20+ */}.bbox .f6 {  /* OLD - iOS 6-, Safari 3.1-6 */  /* OLD - Firefox 19- */  /* Chrome */  -ms-flex: 6 ;  /* IE 10 */  flex: 6;  /* NEW, Spec - Opera 12.1, Firefox 20+ */}.bbox .f7 {  /* OLD - iOS 6-, Safari 3.1-6 */  /* OLD - Firefox 19- */  /* Chrome */  -ms-flex: 7 ;  /* IE 10 */  flex: 7;  /* NEW, Spec - Opera 12.1, Firefox 20+ */}.bbox .f8 {  /* OLD - iOS 6-, Safari 3.1-6 */  /* OLD - Firefox 19- */  /* Chrome */  -ms-flex: 8 ;  /* IE 10 */  flex: 8;  /* NEW, Spec - Opera 12.1, Firefox 20+ */}.bbox .f9 {  /* OLD - iOS 6-, Safari 3.1-6 */  /* OLD - Firefox 19- */  /* Chrome */  -ms-flex: 9 ;  /* IE 10 */  flex: 9;  /* NEW, Spec - Opera 12.1, Firefox 20+ */}/* * 子元素单独对齐方式 */.bbox .selftop {  -webkit-ailgn-self: flex-start;  -ms-flex-item-align: start;      align-self: flex-start;}.bbox .selfbottom {  -webkit-ailgn-self: flex-end;  -ms-flex-item-align: end;      align-self: flex-end;}.bbox .selfcenter {  -webkit-ailgn-self: center ;  -ms-flex-item-align: center ;      -ms-grid-row-align: center ;      align-self: center ;}.bbox .selfbaseline {  -webkit-ailgn-self: baseline;  -ms-flex-item-align: baseline ;      align-self: baseline ;}.bbox .selfstretch {  -webkit-ailgn-self: stretch;  -ms-flex-item-align: stretch ;      -ms-grid-row-align: stretch ;      align-self: stretch ;}@font-face {  font-family: \\'w-e-icon\\';  src: url(data:application/x-font-woff;charset=utf-8;base64,) format(\\'truetype\\');  font-weight: normal;  font-style: normal;}[class^=\"w-e-icon-\"],[class*=\" w-e-icon-\"] {  /* use !important to prevent issues with browser extensions that change fonts */  font-family: \\'w-e-icon\\' !important;  speak: none;  font-style: normal;  font-weight: normal;  font-variant: normal;  text-transform: none;  line-height: 1;  /* Better Font Rendering =========== */  -webkit-font-smoothing: antialiased;  -moz-osx-font-smoothing: grayscale;}.w-e-icon-close:before {  content: \"\\\\f00d\";}.w-e-icon-upload2:before {  content: \"\\\\e9c6\";}.w-e-icon-trash-o:before {  content: \"\\\\f014\";}.w-e-icon-header:before {  content: \"\\\\f1dc\";}.w-e-icon-pencil2:before {  content: \"\\\\e906\";}.w-e-icon-paint-brush:before {  content: \"\\\\f1fc\";}.w-e-icon-image:before {  content: \"\\\\e90d\";}.w-e-icon-play:before {  content: \"\\\\e912\";}.w-e-icon-location:before {  content: \"\\\\e947\";}.w-e-icon-undo:before {  content: \"\\\\e965\";}.w-e-icon-redo:before {  content: \"\\\\e966\";}.w-e-icon-quotes-left:before {  content: \"\\\\e977\";}.w-e-icon-list-numbered:before {  content: \"\\\\e9b9\";}.w-e-icon-list2:before {  content: \"\\\\e9bb\";}.w-e-icon-link:before {  content: \"\\\\e9cb\";}.w-e-icon-happy:before {  content: \"\\\\e9df\";}.w-e-icon-bold:before {  content: \"\\\\ea62\";}.w-e-icon-underline:before {  content: \"\\\\ea63\";}.w-e-icon-italic:before {  content: \"\\\\ea64\";}.w-e-icon-strikethrough:before {  content: \"\\\\ea65\";}.w-e-icon-table2:before {  content: \"\\\\ea71\";}.w-e-icon-paragraph-left:before {  content: \"\\\\ea77\";}.w-e-icon-paragraph-center:before {  content: \"\\\\ea78\";}.w-e-icon-paragraph-right:before {  content: \"\\\\ea79\";}.w-e-icon-terminal:before {  content: \"\\\\f120\";}.w-e-icon-page-break:before {  content: \"\\\\ea68\";}.w-e-icon-cancel-circle:before {  content: \"\\\\ea0d\";}.w-e-icon-font:before {  content: \"\\\\ea5c\";}.w-e-icon-text-heigh:before {  content: \"\\\\ea5f\";}@font-face {  font-family: \"iconfont\";  src: url(\\'fonts/iconfont.woff?t=1603432678038\\') format(\\'truetype\\');  font-weight: normal;  font-display: block;}.iconfont {  font-family: \"iconfont\" !important;  font-size: 16px;  font-style: normal;  -webkit-font-smoothing: antialiased;  -moz-osx-font-smoothing: grayscale;}.icon-quanping1:before {  content: \"\\\\e789\";}.icon-quanping:before {  content: \"\\\\e657\";}.icon-xiangqingye_tiaozhuanlianjie:before {  content: \"\\\\e6a2\";}.icon-xiangqingye_fanhui:before {  content: \"\\\\e6a1\";}.icon-triangle-right:before {  content: \"\\\\e62c\";}.icon-xiazai:before {  content: \"\\\\e629\";}.icon-yousanjiao:before {  content: \"\\\\e614\";}.icon-renminbi:before {  content: \"\\\\e61a\";}.icon-gantanhao1:before {  content: \"\\\\e612\";}.icon-dian:before {  content: \"\\\\e6c3\";}.icon-guanbi:before {  content: \"\\\\e6cb\";}.icon-gou:before {  content: \"\\\\e7a7\";}.icon-dianzan1:before {  content: \"\\\\e61b\";}.icon-duomeitiicon-:before {  content: \"\\\\e60e\";}.icon-weixindenglu_guanbi:before {  content: \"\\\\e638\";}.icon-bangdingshouji_fanhui:before {  content: \"\\\\e639\";}.icon-weixindenglu_weixin:before {  content: \"\\\\e63a\";}.icon-shouye_shouye:before {  content: \"\\\\e63b\";}.icon-shouye_faxian:before {  content: \"\\\\e63c\";}.icon-shouye_wode:before {  content: \"\\\\e63d\";}.icon-shouye_xialacaidan:before {  content: \"\\\\e63e\";}.icon-wode_tixian:before {  content: \"\\\\e63f\";}.icon-faxian_dianzan:before {  content: \"\\\\e640\";}.icon-xiugai_touxiang:before {  content: \"\\\\e641\";}.icon-jujue:before {  content: \"\\\\e64b\";}.icon-tongguo:before {  content: \"\\\\e64c\";}.icon-fuzhilianjie:before {  content: \"\\\\e655\";}.icon-fuzhi_icon:before {  content: \"\\\\e65c\";}.icon-tuanduibaobiao_icon:before {  content: \"\\\\e666\";}.icon-tousujubao_icon:before {  content: \"\\\\e667\";}.icon-zhanghumingxi_iconn:before {  content: \"\\\\e668\";}.icon-wodetuandui_icon:before {  content: \"\\\\e669\";}.icon-shiwan:before {  content: \"\\\\e66b\";}.icon-xiangqingye_weidianzan:before {  content: \"\\\\e69d\";}.icon-xiangqingye_yishoucang:before {  content: \"\\\\e69e\";}.icon-xiangqingye_yidianzan:before {  content: \"\\\\e69f\";}.icon-xiangqingye_weishoucang:before {  content: \"\\\\e6a0\";}.w-e-toolbar {  display: -ms-flexbox;  display: flex;  padding: 0 5px;  -ms-flex-wrap: wrap;      flex-wrap: wrap;  /* 单个菜单 */}.w-e-toolbar .w-e-menu {  position: relative;  text-align: center;  padding: 5px 10px;  cursor: pointer;}.w-e-toolbar .w-e-menu i {  color: #999;}.w-e-toolbar .w-e-menu:hover i {  color: #333;}.w-e-toolbar .w-e-active i {  color: #1e88e5;}.w-e-toolbar .w-e-active:hover i {  color: #1e88e5;}.w-e-text-container .w-e-panel-container {  position: absolute;  top: 0;  left: 50%;  border: 1px solid #ccc;  border-top: 0;  box-shadow: 1px 1px 2px #ccc;  color: #333;  background-color: #fff;  /* 为 emotion panel 定制的样式 */  /* 上传图片的 panel 定制样式 */}.w-e-text-container .w-e-panel-container .w-e-panel-close {  position: absolute;  right: 0;  top: 0;  padding: 5px;  margin: 2px 5px 0 0;  cursor: pointer;  color: #999;}.w-e-text-container .w-e-panel-container .w-e-panel-close:hover {  color: #333;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title {  list-style: none;  display: -ms-flexbox;  display: flex;  font-size: 14px;  margin: 2px 10px 0 10px;  border-bottom: 1px solid #f1f1f1;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-item {  padding: 3px 5px;  color: #999;  cursor: pointer;  margin: 0 3px;  position: relative;  top: 1px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-active {  color: #333;  border-bottom: 1px solid #333;  cursor: default;  font-weight: 700;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content {  padding: 10px 15px 10px 15px;  font-size: 16px;  /* 输入框的样式 */  /* 按钮的样式 */}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content button:focus {  outline: none;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea {  width: 100%;  border: 1px solid #ccc;  padding: 5px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus {  border-color: #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text] {  border: none;  border-bottom: 1px solid #ccc;  font-size: 14px;  height: 20px;  color: #333;  text-align: left;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].small {  width: 30px;  text-align: center;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].block {  display: block;  width: 100%;  margin: 10px 0;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text]:focus {  border-bottom: 2px solid #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button {  font-size: 14px;  color: #1e88e5;  border: none;  padding: 5px 10px;  background-color: #fff;  cursor: pointer;  border-radius: 3px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.left {  float: left;  margin-right: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.right {  float: right;  margin-left: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.gray {  color: #999;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.red {  color: #c24f4a;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button:hover {  background-color: #f1f1f1;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container:after {  content: \"\";  display: table;  clear: both;}.w-e-text-container .w-e-panel-container .w-e-emoticon-container .w-e-item {  cursor: pointer;  font-size: 18px;  padding: 0 3px;  display: inline-block;  *display: inline;  *zoom: 1;}.w-e-text-container .w-e-panel-container .w-e-up-img-container {  text-align: center;}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn {  display: inline-block;  *display: inline;  *zoom: 1;  color: #999;  cursor: pointer;  font-size: 60px;  line-height: 1;}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn:hover {  color: #333;}.w-e-text-container {  position: relative;}.w-e-text-container .w-e-progress {  position: absolute;  background-color: #1e88e5;  bottom: 0;  left: 0;  height: 1px;}.w-e-text {  padding: 0 10px;  overflow-y: scroll;}.w-e-text p,.w-e-text h1,.w-e-text h2,.w-e-text h3,.w-e-text h4,.w-e-text h5,.w-e-text table,.w-e-text pre {  margin: 10px 0;  line-height: 1.5;}.w-e-text ul,.w-e-text ol {  margin: 10px 0 10px 20px;}.w-e-text blockquote {  display: block;  border-left: 8px solid #d0e5f2;  padding: 5px 10px;  margin: 10px 0;  line-height: 1.4;  font-size: 100%;  background-color: #f1f1f1;}.w-e-text code {  display: inline-block;  *display: inline;  *zoom: 1;  background-color: #f1f1f1;  border-radius: 3px;  padding: 3px 5px;  margin: 0 3px;}.w-e-text pre code {  display: block;}.w-e-text table {  border-top: 1px solid #ccc;  border-left: 1px solid #ccc;}.w-e-text table td,.w-e-text table th {  border-bottom: 1px solid #ccc;  border-right: 1px solid #ccc;  padding: 3px 5px;}.w-e-text table th {  border-bottom: 2px solid #ccc;  text-align: center;}.w-e-text:focus {  outline: none;}.w-e-text img {  cursor: pointer;}.w-e-text img:hover {  box-shadow: 0 0 5px #333;}';\n\n// 将 css 代码添加到 <style> 中\nvar style = document.createElement('style');\nstyle.type = 'text/css';\nstyle.innerHTML = inlinecss;\ndocument.getElementsByTagName('HEAD').item(0).appendChild(style);\n\n// 返回\nvar index = window.wangEditor || Editor;\n\nreturn index;\n\n})));\n"]}